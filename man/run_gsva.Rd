% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/statistic-gsva.R
\name{run_gsva}
\alias{run_gsva}
\title{Gene Set Variation Analysis (GSVA)}
\usage{
run_gsva(
  mat,
  network,
  .source = source,
  .target = target,
  verbose = FALSE,
  method = c("gsva", "plage", "ssgsea", "zscore"),
  minsize = 5L,
  maxsize = Inf,
  ...
)
}
\arguments{
\item{mat}{Matrix to evaluate (e.g. expression matrix).
Target nodes in rows and conditions in columns.
\code{rownames(mat)} must have at least one intersection with the elements
in \code{network} \code{.target} column.}

\item{network}{Tibble or dataframe with edges and it's associated metadata.}

\item{.source}{Column with source nodes.}

\item{.target}{Column with target nodes.}

\item{verbose}{Gives information about each calculation step. Default: FALSE.}

\item{method}{Method to employ in the estimation of gene-set enrichment.
scores per sample. By default this is set to gsva (H채nzelmann et al, 2013).
Further available methods are "plage", "ssgsea" and "zscore". Read more in
the manual of \code{\link{GSVA::gsva}}.}

\item{minsize}{Integer indicating the minimum number of targets per source.
Must be greater than 0.}

\item{maxsize}{Integer indicating the maximum number of targets per source.}

\item{...}{
  Arguments passed on to \code{\link[GSVA:gsvaParam-class]{GSVA::gsvaParam}}, \code{\link[GSVA:ssgseaParam-class]{GSVA::ssgseaParam}}
  \describe{
    \item{\code{assay}}{Character vector of length 1.  The name of the assay to use in
case \code{exprData} is a multi-assay container, otherwise ignored.  By default,
the first assay is used.}
    \item{\code{annotation}}{An object of class \code{\linkS4class{GeneIdentifierType}} from
package \code{GSEABase} describing the gene identifiers used as the row names of
the expression data set.  See \code{\link{GeneIdentifierType}} for help on available
gene identifier types and how to construct them.  This
information can be used to map gene identifiers occurring in the gene sets.

If the default value \code{NULL} is provided, an attempt will be made to extract
the gene identifier type from the expression data set provided as \code{exprData}
(by calling \code{\link[GSVA]{gsvaAnnotation}} on it).  If still not successful, the
\code{NullIdentifier()} will be used as the gene identifier type, gene identifier
mapping will be disabled and gene identifiers used in expression data set and
gene sets can only be matched directly.}
    \item{\code{kcdf}}{Character vector of length 1 denoting the kernel to use during
the non-parametric estimation of the empirical cumulative distribution
function (ECDF) of expression levels across samples. The value \code{kcdf="auto"}
will allow GSVA to automatically choose one of the possible values. The
value \code{kcdf="Gaussian"} is suitable when input expression values are
continuous, such as microarray fluorescent units in logarithmic scale,
RNA-seq log-CPMs, log-RPKMs, or log-TPMs. When input expression values are
integer counts, such as those derived from RNA-seq experiments, then this
argument should be set to \code{kcdf="Poisson"}. When we do not want to use a
kernel approach for the estimation of the ECDF, then we should set
\code{kcdf="none"}.}
    \item{\code{kcdfNoneMinSampleSize}}{Integer vector of length 1. When \code{kcdf="auto"},
this parameter decides at what minimum sample size \code{kcdf="none"}, i.e., the
estimation of the empirical cumulative distribution function (ECDF) of
expression levels across samples is performed directly without using a
kernel. By default, this value is set to 200; see the \code{kcdf} slot.}
    \item{\code{tau}}{Numeric vector of length 1.  The exponent defining the weight of
the tail in the random walk performed by the \code{GSVA} (H채nzelmann et al.,
2013) method.  The default value is 1 as described in the paper.}
    \item{\code{maxDiff}}{Logical vector of length 1 which offers two approaches to
calculate the enrichment statistic (ES) from the KS random walk statistic.
\itemize{
\item \code{FALSE}: ES is calculated as the maximum distance of the random walk
from 0. This approach produces a distribution of enrichment scores that is
bimodal, but it can give large enrichment scores to gene sets whose genes
are not concordantly activated in one direction only.
\item \code{TRUE} (the default): ES is calculated as the magnitude difference between
the largest positive and negative random walk deviations. This default value
gives larger enrichment scores to gene sets whose genes are concordantly
activated in one direction only.
}}
    \item{\code{absRanking}}{Logical vector of length 1 used only when \code{maxDiff=TRUE}.
When \code{absRanking=FALSE} (default) a modified Kuiper statistic is used to
calculate enrichment scores, taking the magnitude difference between the
largest positive and negative random walk deviations. When
\code{absRanking=TRUE} the original Kuiper statistic that sums the largest
positive and negative random walk deviations is used.}
    \item{\code{sparse}}{Logical vector of length 1 used only when the input expression
data in \code{exprData} is stored in a sparse matrix (e.g., a \code{dgCMatrix} or a
\code{SingleCellExperiment} object storing the expression data in a \code{dgCMatrix}).
In such a case, when \code{sparse=TRUE} (default), a sparse version of the GSVA
algorithm will be applied. Otherwise, when \code{sparse=FALSE}, the classical
version of the GSVA algorithm will be used.}
    \item{\code{checkNA}}{Character vector of length 1 specifying whether the input
expression data should be checked for the presence of missing (\code{NA}) values.
This must be
one of the strings \code{"auto"} (default), \code{"yes"}, or \code{"no"}. The default value
\code{"auto"} means that the software will perform that check only when the input
expression data is provided as a base \code{\link{matrix}}, an \code{\link{ExpressionSet}} or a
\code{\link{SummarizedExperiment}} object, while every other type of input expression
data container (e.g., \code{\link{SingleCellExperiment}}, etc.) will not be checked.
If \code{checkNA="yes"}, then the input expression data will be checked for
missing values irrespective of the object class of the data container, and
if \code{checkNA="no"}, then that check will not be performed.}
    \item{\code{use}}{Character vector of length 1 specifying a policy for dealing with
missing values (\code{NA}s) in the input expression data argument \code{exprData}. It
only applies when either \code{checkNA="yes"}, or \code{checkNA="auto"} (see the
\code{checkNA} parameter. The argument value must be one of the strings
\code{"everything"} (default), \code{"all.obs"}, or \code{"na.rm"}. The policy of the
default value \code{"everything"} consists of propagating \code{NA}s so that the
resulting enrichment score will be \code{NA}, whenever one or more of its
contributing values is \code{NA}, giving a warning when that happens. When
\code{use="all.obs"}, the presence of \code{NA}s in the input expression data will
produce an error. Finally, when \code{use="na.rm"}, \code{NA} values in the input
expression data will be removed from calculations, giving a warning when that
happens, and giving an error if no values are left after removing the \code{NA}
values.}
    \item{\code{alpha}}{Numeric vector of length 1.  The exponent defining the
weight of the tail in the random walk performed by the \code{ssGSEA} (Barbie et
al., 2009) method.  The default value is 0.25 as described in the paper.}
    \item{\code{normalize}}{Logical vector of length 1; if \code{TRUE} runs the \code{ssGSEA}
method from Barbie et al. (2009) normalizing the scores by the absolute
difference between the minimum and the maximum, as described in their paper.
Otherwise this final normalization step is skipped.}
  }}
}
\value{
A long format tibble of the enrichment scores for each source
across the samples. Resulting tibble contains the following columns:
\enumerate{
\item \code{statistic}: Indicates which method is associated with which score.
\item \code{source}: Source nodes of \code{network}.
\item \code{condition}: Condition representing each column of \code{mat}.
\item \code{score}: Regulatory activity (enrichment score).
}
}
\description{
Calculates regulatory activities using GSVA.
}
\details{
GSVA (H채nzelmann et al., 2013) starts by transforming the input molecular
readouts in mat to a readout-level statistic using Gaussian kernel estimation
of the cumulative density function. Then, readout-level statistics are
ranked per sample and normalized to up-weight the two tails of the rank
distribution. Afterwards, an enrichment score \code{gsva} is calculated
using a running sum statistic that is normalized by subtracting the largest
negative estimate from the largest positive one.

H채nzelmann S. et al. (2013) GSVA: gene set variation analysis for microarray
and RNA-seq data. BMC Bioinformatics, 14, 7.
}
\examples{
inputs_dir <- system.file("testdata", "inputs", package = "decoupleR")

mat <- readRDS(file.path(inputs_dir, "mat.rds"))
net <- readRDS(file.path(inputs_dir, "net.rds"))

run_gsva(mat, net, minsize=1, verbose = FALSE)
}
\seealso{
Other decoupleR statistics: 
\code{\link{decouple}()},
\code{\link{run_aucell}()},
\code{\link{run_fgsea}()},
\code{\link{run_mdt}()},
\code{\link{run_mlm}()},
\code{\link{run_ora}()},
\code{\link{run_udt}()},
\code{\link{run_ulm}()},
\code{\link{run_viper}()},
\code{\link{run_wmean}()},
\code{\link{run_wsum}()}
}
\concept{decoupleR statistics}
