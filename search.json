[{"path":"https://saezlab.github.io/decoupleR/articles/decoupleR.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction","text":"decoupleR R package distributed part Bioconductor project. install package, start R enter: Alternatively, can instead install latest development version GitHub :","code":"install.packages(\"BiocManager\") BiocManager::install(\"decoupleR\") BiocManager::install(\"saezlab/decoupleR\")"},{"path":"https://saezlab.github.io/decoupleR/articles/decoupleR.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Introduction","text":"decoupleR (Badia--Mompel, Santiago, Braunger, Geiss, Dimitrov, Müller-Dott, Taus, Dugourd, Holland, Flores, Saez-Rodriguez, 2022) contains different statistical methods extract biological activities omics data using prior knowledge. : AUCell: (Aibar, Bravo Gonzalez-Blas, Moerman, Huynh-Thu, Imrichova, Hulselmans, Rambow, Marine, Geurts, Aerts, van den Oord, Kalender Atak, Wouters, Aerts, 2017) Fast GSEA: (Korotkevich, Sukhov, Sergushichev, 2019) GSVA: (H{ä}nzelmann, Castelo, Guinney, 2013) viper: (Alvarez, Shen, Giorgi, Lachmann, Ding, Ye, Califano, 2016) vignette showcase use toy data.","code":""},{"path":"https://saezlab.github.io/decoupleR/articles/decoupleR.html","id":"libraries","dir":"Articles","previous_headings":"Usage","what":"Libraries","title":"Introduction","text":"decoupleR can imported :","code":"library(decoupleR)  # Extra libraries library(dplyr) library(pheatmap)"},{"path":"https://saezlab.github.io/decoupleR/articles/decoupleR.html","id":"input-data","dir":"Articles","previous_headings":"Usage","what":"Input data","title":"Introduction","text":"decoupleR needs matrix (mat) molecular readouts (gene expression, logFC, p-values, etc.) network relates target features (genes, proteins, etc.) “source” biological entities (pathways, transcription factors, molecular processes, etc.). methods also require mode regulation (MoR) interaction, defined negative positive weights. get example data-set, run: example consists two small populations samples (S, cols) different gene expression patterns (G, rows):  can see genes seem expressed one group samples vice-versa. Ideally, like capture differences gene programs interpretable biological entities. example summarizing gene expression transcription factor activities. toy data also contains simple net consisting 3 transcription factors (Ts) specific regulation target genes (either positive negative). network can visualized like graph. Green edges positive regulation (activation), red edges negative regulation (inactivation):  According network, first population samples show high activity T1 T3, second one T2.","code":"data <- get_toy_data()  mat <- data$mat head(mat,5)[,1:5] #>           S01       S02       S03        S04      S05 #> G01 9.3709584 9.3888607 9.8951935  8.7844590 8.431446 #> G02 8.5646982 8.2787888 8.4304691  8.8509076 8.655648 #> G03 8.3631284 8.1333213 8.2572694 10.4142076 8.321925 #> G04 8.6328626 8.6359504 9.7631631  8.0361226 8.783839 #> G05 0.4042683 0.2842529 0.4600974  0.2059986 1.575728  network <- data$network network #> # A tibble: 10 × 3 #>    source target   mor #>    <chr>  <chr>  <dbl> #>  1 T1     G01      1   #>  2 T1     G02      1   #>  3 T1     G03      0.7 #>  4 T2     G06      1   #>  5 T2     G07      0.5 #>  6 T2     G08      1   #>  7 T3     G06     -0.5 #>  8 T3     G07     -3   #>  9 T3     G08     -1   #> 10 T3     G11      1 pheatmap(mat, cluster_rows = F, cluster_cols = F)"},{"path":"https://saezlab.github.io/decoupleR/articles/decoupleR.html","id":"methods","dir":"Articles","previous_headings":"Usage","what":"Methods","title":"Introduction","text":"decoupleR contains several methods. check many available, run: method models biological activities different manner, sometimes returning one estimate providing significance estimation. know method returns, please check documentation like ?run_mlm. unified framework, methods shared arguments: mat : input matrix molecular readouts. network : input prior knowledge information relating molecular features biological entities. .source refers biological entities. .target refers molecular features. .mor refers “strength” interaction (available, else 1s used). available methods can model interaction weights. minsize : Minimum target features per biological entity (5 default). less, sources removed. filtering prevents obtaining noisy activities biological entities matching target features matrix. example data-set keep 0 though.","code":"show_methods() #> # A tibble: 12 × 2 #>    Function      Name                                                            #>    <chr>         <chr>                                                           #>  1 run_aucell    AUCell                                                          #>  2 run_consensus Consensus score between methods                                 #>  3 run_fgsea     Fast Gene Set Enrichment Analysis (FGSEA)                       #>  4 run_gsva      Gene Set Variation Analysis (GSVA)                              #>  5 run_mdt       Multivariate Decision Trees (MDT)                               #>  6 run_mlm       Multivariate Linear Model (MLM)                                 #>  7 run_ora       Over Representation Analysis (ORA)                              #>  8 run_udt       Univariate Decision Tree (UDT)                                  #>  9 run_ulm       Univariate Linear Model (ULM)                                   #> 10 run_viper     Virtual Inference of Protein-activity by Enriched Regulon anal… #> 11 run_wmean     Weighted Mean (WMEAN)                                           #> 12 run_wsum      Weighted Sum (WSUM)"},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/articles/decoupleR.html","id":"individual-methods","dir":"Articles","previous_headings":"Usage > Running methods","what":"Individual methods","title":"Introduction","text":"example, let’s first run Gene Set Enrichment Analysis method (gsea), one well-known statistics: Methods return result data-frame containing: statistic: name statistic. Depending method, can one per method. source: name biological entity. condition: sample name. score: inferred biological activity. p_value: available, significance inferred activity. case gsea, returns simple estimate activities (fgsea), normalized estimate (norm_fgsea) p-values permutations. methods can return different things, example Univariate Linear Model (ulm): case, ulm returns just estimate (ulm) associated p-values. method can return different statistics, recommend check documentation know . Let us plot obtained results, first gsea:  can observe transcription factors T1 T2, obtained activities correctly distinguish two sample populations. T3, hand, second population samples since repressor. mislabeling activities happens gsea model weights inferring biological activities. weights available prior knowledge, definitely recommend using methods take account get better estimates, one example ulm:  Since ulm models weights estimating biological activities, correctly assigns T3 inactive second population samples.","code":"res_gsea <- run_fgsea(mat, network, .source='source', .target='target', nproc=1, minsize = 0) #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% res_gsea #>  [38;5;246m# A tibble: 144 × 5 [39m #>    statistic  source condition   score p_value #>     [3m [38;5;246m<chr> [39m [23m       [3m [38;5;246m<chr> [39m [23m   [3m [38;5;246m<chr> [39m [23m        [3m [38;5;246m<dbl> [39m [23m    [3m [38;5;246m<dbl> [39m [23m #>  [38;5;250m 1 [39m fgsea      T1     S01         0.889  0.075 [4m5 [24m #>  [38;5;250m 2 [39m norm_fgsea T1     S01         1.24   0.075 [4m5 [24m #>  [38;5;250m 3 [39m fgsea      T2     S01        - [31m0 [39m [31m. [39m [31m667 [39m  0.548  #>  [38;5;250m 4 [39m norm_fgsea T2     S01        - [31m1 [39m [31m. [39m [31m11 [39m   0.548  #>  [38;5;250m 5 [39m fgsea      T3     S01        - [31m0 [39m [31m. [39m [31m75 [39m   0.01   #>  [38;5;250m 6 [39m norm_fgsea T3     S01        [31mInf [39m      0.01   #>  [38;5;250m 7 [39m fgsea      T1     S02         0.889  0.076 [4m4 [24m #>  [38;5;250m 8 [39m norm_fgsea T1     S02         1.29   0.076 [4m4 [24m #>  [38;5;250m 9 [39m fgsea      T2     S02         0      0.977  #>  [38;5;250m10 [39m norm_fgsea T2     S02         0      0.977  #>  [38;5;246m# ℹ 134 more rows [39m res_ulm <- run_ulm(mat, network, .source='source', .target='target', .mor='mor', minsize = 0) res_ulm #> # A tibble: 72 × 5 #>    statistic source condition score  p_value #>    <chr>     <chr>  <chr>     <dbl>    <dbl> #>  1 ulm       T1     S01        4.21 0.00180  #>  2 ulm       T1     S02        4.07 0.00224  #>  3 ulm       T1     S03        3.85 0.00319  #>  4 ulm       T1     S04        4.60 0.000979 #>  5 ulm       T1     S05        3.90 0.00298  #>  6 ulm       T1     S06        3.66 0.00442  #>  7 ulm       T1     S07        4.31 0.00153  #>  8 ulm       T1     S08        4.65 0.000902 #>  9 ulm       T1     S09        4.49 0.00117  #> 10 ulm       T1     S10        4.07 0.00225  #> # ℹ 62 more rows # Transform to matrix mat_gsea <- res_gsea %>%   filter(statistic=='fgsea') %>%   pivot_wider_profile(id_cols = source, names_from = condition,                        values_from = score) %>%   as.matrix()  pheatmap(mat_gsea, cluster_rows = F, cluster_cols = F, cellwidth = 15, cellheight = 40) # Transform to matrix mat_ulm <- res_ulm %>%   filter(statistic=='ulm') %>%   pivot_wider_profile(id_cols = source, names_from = condition,                        values_from = score) %>%   as.matrix()  pheatmap(mat_ulm, cluster_rows = F, cluster_cols = F, cellwidth = 15, cellheight = 40)"},{"path":"https://saezlab.github.io/decoupleR/articles/decoupleR.html","id":"multiple-methods","dir":"Articles","previous_headings":"Usage > Running methods","what":"Multiple methods","title":"Introduction","text":"decoupleR also allows run multiple methods time. Moreover, computes consensus score based obtained activities across methods, called consensus. default, deocuple runs top performer methods benchmark (mlm, ulm wsum), estimates consensus score across . Specific arguments specific methods can passed using variable args. information check ?decouple. Let us see result consensus score previous decouple run:  can observe consensus score correctly predicts T1 T3 active first population samples T2 second one.","code":"res_decouple <- decouple(mat,                           network,                           .source='source',                           .target='target',                          minsize = 0) res_decouple #> # A tibble: 432 × 6 #>    run_id statistic source condition   score p_value #>     <dbl> <chr>     <chr>  <chr>       <dbl>   <dbl> #>  1      1 mlm       T1     S01        3.52   0.00781 #>  2      1 mlm       T2     S01       -1.13   0.290   #>  3      1 mlm       T3     S01       -0.247  0.811   #>  4      1 mlm       T1     S02        3.48   0.00831 #>  5      1 mlm       T2     S02       -0.213  0.837   #>  6      1 mlm       T3     S02       -0.353  0.733   #>  7      1 mlm       T1     S03        3.15   0.0135  #>  8      1 mlm       T2     S03       -0.638  0.541   #>  9      1 mlm       T3     S03        0.0749 0.942   #> 10      1 mlm       T1     S04        3.82   0.00512 #> # ℹ 422 more rows # Transform to matrix mat_consensus <- res_decouple %>%   filter(statistic=='consensus') %>%   pivot_wider_profile(id_cols = source, names_from = condition,                        values_from = score) %>%   as.matrix()  pheatmap(mat_consensus, cluster_rows = F, cluster_cols = F, cellwidth = 15, cellheight = 40)"},{"path":"https://saezlab.github.io/decoupleR/articles/decoupleR.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Introduction","text":"","code":"#> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.1 (2023-06-16) #>  os       Ubuntu 22.04.3 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       UTC #>  date     2024-03-24 #>  pandoc   3.1.1 @ /usr/local/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package      * version date (UTC) lib source #>  backports      1.4.1   2021-12-13 [1] RSPM #>  bibtex         0.5.1   2023-01-26 [1] RSPM #>  BiocManager    1.30.22 2023-08-08 [1] RSPM #>  BiocParallel   1.36.0  2023-10-24 [1] Bioconductor #>  BiocStyle    * 2.30.0  2023-10-24 [1] Bioconductor #>  bookdown       0.36    2023-10-16 [1] RSPM #>  bslib          0.5.1   2023-08-11 [1] RSPM #>  cachem         1.0.8   2023-05-01 [1] RSPM #>  cli            3.6.1   2023-03-23 [1] RSPM #>  codetools      0.2-19  2023-02-01 [2] CRAN (R 4.3.1) #>  colorspace     2.1-0   2023-01-23 [1] RSPM #>  cowplot        1.1.1   2020-12-30 [1] RSPM #>  data.table     1.14.8  2023-02-17 [1] RSPM #>  decoupleR    * 2.9.6   2024-03-24 [1] Bioconductor #>  desc           1.4.2   2022-09-08 [1] RSPM #>  digest         0.6.33  2023-07-07 [1] RSPM #>  dplyr        * 1.1.3   2023-09-03 [1] RSPM #>  evaluate       0.22    2023-09-29 [1] RSPM #>  fansi          1.0.5   2023-10-08 [1] RSPM #>  fastmap        1.1.1   2023-02-24 [1] RSPM #>  fastmatch      1.1-4   2023-08-18 [1] RSPM #>  fgsea          1.28.0  2023-10-24 [1] Bioconductor #>  fs             1.6.3   2023-07-20 [1] RSPM #>  generics       0.1.3   2022-07-05 [1] RSPM #>  ggplot2        3.4.4   2023-10-12 [1] RSPM #>  glue           1.6.2   2022-02-24 [1] RSPM #>  gtable         0.3.4   2023-08-21 [1] RSPM #>  htmltools      0.5.6.1 2023-10-06 [1] RSPM #>  httr           1.4.7   2023-08-15 [1] RSPM #>  jquerylib      0.1.4   2021-04-26 [1] RSPM #>  jsonlite       1.8.7   2023-06-29 [1] RSPM #>  knitr          1.44    2023-09-11 [1] RSPM #>  lattice        0.22-5  2023-10-24 [1] RSPM #>  lifecycle      1.0.3   2022-10-07 [1] RSPM #>  lubridate      1.9.3   2023-09-27 [1] RSPM #>  magrittr       2.0.3   2022-03-30 [1] RSPM #>  Matrix         1.6-1.1 2023-09-18 [1] RSPM #>  memoise        2.0.1   2021-11-26 [1] RSPM #>  munsell        0.5.0   2018-06-12 [1] RSPM #>  parallelly     1.36.0  2023-05-26 [1] RSPM #>  pheatmap     * 1.0.12  2019-01-04 [1] RSPM #>  pillar         1.9.0   2023-03-22 [1] RSPM #>  pkgconfig      2.0.3   2019-09-22 [1] RSPM #>  pkgdown        2.0.7   2022-12-14 [1] RSPM #>  plyr           1.8.9   2023-10-02 [1] RSPM #>  purrr          1.0.2   2023-08-10 [1] RSPM #>  R6             2.5.1   2021-08-19 [1] RSPM #>  ragg           1.2.6   2023-10-10 [1] RSPM #>  RColorBrewer   1.1-3   2022-04-03 [1] RSPM #>  Rcpp           1.0.11  2023-07-06 [1] RSPM #>  RefManageR   * 1.4.0   2022-09-30 [1] RSPM #>  rlang          1.1.1   2023-04-28 [1] RSPM #>  rmarkdown      2.25    2023-09-18 [1] RSPM #>  rprojroot      2.0.3   2022-04-02 [1] RSPM #>  sass           0.4.7   2023-07-15 [1] RSPM #>  scales         1.2.1   2022-08-20 [1] RSPM #>  sessioninfo    1.2.2   2021-12-06 [1] RSPM #>  stringi        1.7.12  2023-01-11 [1] RSPM #>  stringr        1.5.0   2022-12-02 [1] RSPM #>  systemfonts    1.0.5   2023-10-09 [1] RSPM #>  textshaping    0.3.7   2023-10-09 [1] RSPM #>  tibble         3.2.1   2023-03-20 [1] RSPM #>  tidyr          1.3.0   2023-01-24 [1] RSPM #>  tidyselect     1.2.0   2022-10-10 [1] RSPM #>  timechange     0.2.0   2023-01-11 [1] RSPM #>  utf8           1.2.4   2023-10-22 [1] RSPM #>  vctrs          0.6.4   2023-10-12 [1] RSPM #>  withr          2.5.1   2023-09-26 [1] RSPM #>  xfun           0.40    2023-08-09 [1] RSPM #>  xml2           1.3.5   2023-07-06 [1] RSPM #>  yaml           2.3.7   2023-01-23 [1] RSPM #>  #>  [1] /usr/local/lib/R/site-library #>  [2] /usr/local/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://saezlab.github.io/decoupleR/articles/decoupleR.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"Introduction","text":"[1] S. Aibar, C. Bravo Gonzalez-Blas, T. Moerman, et al. “SCENIC: Single-Cell Regulatory Network Inference Clustering”. : Nature Methods 14 (2017), pp. 1083-1086. DOI: 10.1038/nmeth.4463. [2] M. J. Alvarez, Y. Shen, F. M. Giorgi, et al. “Functional characterization somatic mutations cancer using network-based inference protein activity”. : Nature genetics 48.8 (2016), pp. 838–47. [3] P. Badia--Mompel, J. V. Santiago, J. Braunger, et al. “decoupleR: ensemble computational methods infer biological activities omics data”. : Bioinformatics Advances (2022). DOI: https://doi.org/10.1093/bioadv/vbac016. [4] S. Hänzelmann, R. Castelo, J. Guinney. “GSVA: gene set variation analysis microarray RNA-Seq data”. : BMC Bioinformatics 14 (2013), p. 7. DOI: 10.1186/1471-2105-14-7. URL: https://doi.org/10.1186/1471-2105-14-7. [5] G. Korotkevich, V. Sukhov, . Sergushichev. “Fast gene set enrichment analysis”. : bioRxiv (2019). DOI: 10.1101/060012. URL: http://biorxiv.org/content/early/2016/06/20/060012.","code":""},{"path":"https://saezlab.github.io/decoupleR/articles/pw_bk.html","id":"loading-packages","dir":"Articles","previous_headings":"","what":"Loading packages","title":"Pathway activity inference in bulk RNA-seq","text":"First, need load relevant packages:","code":"## We load the required packages library(decoupleR) library(dplyr) library(tibble) library(tidyr) library(ggplot2) library(pheatmap) library(ggrepel)"},{"path":"https://saezlab.github.io/decoupleR/articles/pw_bk.html","id":"loading-the-data-set","dir":"Articles","previous_headings":"","what":"Loading the data-set","title":"Pathway activity inference in bulk RNA-seq","text":"used already processed bulk RNA-seq data-set. provide normalized log-transformed counts, experimental design meta-data Differential Expressed Genes (DEGs) obtained using limma. example use limma used DeSeq2, edgeR statistical framework. decoupleR requires gene level statistic perform enrichment analysis agnostic generated. However, recommend use statistics include direction change significance, example t-value obtained limma(t) DeSeq2(stat). edgeR return statistic can create weighting obtained logFC pvalue formula: -log10(pvalue) * logFC. can open data like : data can extract mentioned information. see normalized log-transformed counts: design meta-data: results limma, interested extracting obtained t-value contrast:","code":"inputs_dir <- system.file(\"extdata\", package = \"decoupleR\") data <- readRDS(file.path(inputs_dir, \"bk_data.rds\")) # Remove NAs and set row names counts <- data$counts %>%   dplyr::mutate_if(~ any(is.na(.x)), ~ if_else(is.na(.x),0,.x)) %>%    column_to_rownames(var = \"gene\") %>%    as.matrix() head(counts) #>          PANC1.WT.Rep1 PANC1.WT.Rep2 PANC1.WT.Rep3 PANC1.FOXA2KO.Rep1 #> NOC2L        10.052588     11.949123     12.057774          12.312291 #> PLEKHN1       7.535115      8.125993      8.714880           8.048196 #> PERM1         6.281242      6.424582      6.589668           6.293285 #> ISG15        10.938252     11.469081     11.425415          11.549986 #> AGRN          6.956335      7.196108      7.522550           7.061549 #> C1orf159      9.546224      9.788721      9.794589           9.850830 #>          PANC1.FOXA2KO.Rep2 PANC1.FOXA2KO.Rep3 #> NOC2L             12.139918          11.494205 #> PLEKHN1            8.290154           8.621239 #> PERM1              6.486136           6.775344 #> ISG15             11.371464          11.178157 #> AGRN               7.485534           7.071555 #> C1orf159           9.988069           9.965357 design <- data$design design #> # A tibble: 6 × 2 #>   sample             condition     #>   <chr>              <chr>         #> 1 PANC1.WT.Rep1      PANC1.WT      #> 2 PANC1.WT.Rep2      PANC1.WT      #> 3 PANC1.WT.Rep3      PANC1.WT      #> 4 PANC1.FOXA2KO.Rep1 PANC1.FOXA2KO #> 5 PANC1.FOXA2KO.Rep2 PANC1.FOXA2KO #> 6 PANC1.FOXA2KO.Rep3 PANC1.FOXA2KO # Extract t-values per gene deg <- data$limma_ttop %>%     select(ID, t) %>%      filter(!is.na(t)) %>%      column_to_rownames(var = \"ID\") %>%     as.matrix() head(deg) #>                  t #> RHBDL2  -12.810588 #> PLEKHH2 -10.794453 #> HEG1     -9.788112 #> CLU      -9.761618 #> FHL1      8.950191 #> RBP4     -8.529074"},{"path":"https://saezlab.github.io/decoupleR/articles/pw_bk.html","id":"progeny-model","dir":"Articles","previous_headings":"","what":"PROGENy model","title":"Pathway activity inference in bulk RNA-seq","text":"PROGENy comprehensive resource containing curated collection pathways target genes, weights interaction. example use human weights (organisms available) use top 500 responsive genes ranked p-value. brief description pathway: Androgen: involved growth development male reproductive organs. EGFR: regulates growth, survival, migration, apoptosis, proliferation, differentiation mammalian cells Estrogen: promotes growth development female reproductive organs. Hypoxia: promotes angiogenesis metabolic reprogramming O2 levels low. JAK-STAT: involved immunity, cell division, cell death, tumor formation. MAPK: integrates external signals promotes cell growth proliferation. NFkB: regulates immune response, cytokine production cell survival. p53: regulates cell cycle, apoptosis, DNA repair tumor suppression. PI3K: promotes growth proliferation. TGFb: involved development, homeostasis, repair tissues. TNFa: mediates haematopoiesis, immune surveillance, tumour regression protection infection. Trail: induces apoptosis. VEGF: mediates angiogenesis, vascular permeability, cell migration. WNT: regulates organ morphogenesis development tissue repair. access can use decoupleR:","code":"net <- get_progeny(organism = 'human', top = 500) net #> # A tibble: 7,000 × 4 #>    source   target  weight  p_value #>    <chr>    <chr>    <dbl>    <dbl> #>  1 Androgen TMPRSS2  11.5  2.38e-47 #>  2 Androgen NKX3-1   10.6  2.21e-44 #>  3 Androgen MBOAT2   10.5  4.63e-44 #>  4 Androgen KLK2     10.2  1.94e-40 #>  5 Androgen SARG     11.4  2.79e-40 #>  6 Androgen SLC38A4   7.36 1.25e-39 #>  7 Androgen MTMR9     6.13 2.53e-38 #>  8 Androgen ZBTB16   10.6  1.57e-36 #>  9 Androgen KCNN2     9.47 7.71e-36 #> 10 Androgen OPRK1    -5.63 1.11e-35 #> # ℹ 6,990 more rows"},{"path":"https://saezlab.github.io/decoupleR/articles/pw_bk.html","id":"activity-inference-with-multivariate-linear-model-mlm","dir":"Articles","previous_headings":"","what":"Activity inference with Multivariate Linear Model (MLM)","title":"Pathway activity inference in bulk RNA-seq","text":"infer pathway enrichment scores run Multivariate Linear Model (mlm) method. sample dataset (mat), fits linear model predicts observed gene expression based pathways’ Pathway-Gene interactions weights. fitted, obtained t-values slopes scores. positive, interpret pathway active negative interpret inactive. run decoupleR methods, need input matrix (mat), input prior knowledge network/resource (net), name columns net want use.","code":"# Run mlm sample_acts <- run_mlm(mat=counts, net=net, .source='source', .target='target',                   .mor='weight', minsize = 5) sample_acts #> # A tibble: 84 × 5 #>    statistic source   condition       score  p_value #>    <chr>     <chr>    <chr>           <dbl>    <dbl> #>  1 mlm       Androgen PANC1.WT.Rep1 -0.692  0.489    #>  2 mlm       EGFR     PANC1.WT.Rep1 -0.0414 0.967    #>  3 mlm       Estrogen PANC1.WT.Rep1 -0.361  0.718    #>  4 mlm       Hypoxia  PANC1.WT.Rep1 -2.06   0.0393   #>  5 mlm       JAK-STAT PANC1.WT.Rep1 -0.166  0.868    #>  6 mlm       MAPK     PANC1.WT.Rep1 -0.509  0.611    #>  7 mlm       NFkB     PANC1.WT.Rep1 -2.84   0.00447  #>  8 mlm       PI3K     PANC1.WT.Rep1  3.53   0.000423 #>  9 mlm       TGFb     PANC1.WT.Rep1 -1.43   0.152    #> 10 mlm       TNFa     PANC1.WT.Rep1  2.06   0.0395   #> # ℹ 74 more rows"},{"path":"https://saezlab.github.io/decoupleR/articles/pw_bk.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Pathway activity inference in bulk RNA-seq","text":"obtained results observe obtained activities per sample heat-map:  can also infer pathway activities t-values DEGs KO WT: Let’s show changes activity KO WT:  pathway p53 Trail deactivated KO compared WT, MAPKK JAK-STAT seem activated. can visualize responsive genes pathway along t-values interpret results. example, let’s see genes belong MAPK pathway:  pathway seems active since majority target genes positive weights positive t-values (1st quadrant), majority ones negative weights negative t-values (3d quadrant).","code":"# Transform to wide matrix sample_acts_mat <- sample_acts %>%   pivot_wider(id_cols = 'condition', names_from = 'source',               values_from = 'score') %>%   column_to_rownames('condition') %>%   as.matrix()  # Scale per feature sample_acts_mat <- scale(sample_acts_mat)  # Choose color palette palette_length = 100 my_color = colorRampPalette(c(\"Darkblue\", \"white\",\"red\"))(palette_length)  my_breaks <- c(seq(-3, 0, length.out=ceiling(palette_length/2) + 1),                seq(0.05, 3, length.out=floor(palette_length/2)))  # Plot pheatmap(sample_acts_mat, border_color = NA, color=my_color, breaks = my_breaks) # Run mlm contrast_acts <- run_mlm(mat=deg, net=net, .source='source', .target='target',                   .mor='weight', minsize = 5) contrast_acts #> # A tibble: 14 × 5 #>    statistic source   condition  score  p_value #>    <chr>     <chr>    <chr>      <dbl>    <dbl> #>  1 mlm       Androgen t         -0.219 8.27e- 1 #>  2 mlm       EGFR     t         -0.439 6.61e- 1 #>  3 mlm       Estrogen t          3.95  7.70e- 5 #>  4 mlm       Hypoxia  t          0.171 8.64e- 1 #>  5 mlm       JAK-STAT t          5.91  3.47e- 9 #>  6 mlm       MAPK     t         13.0   4.32e-38 #>  7 mlm       NFkB     t          1.36  1.75e- 1 #>  8 mlm       PI3K     t          5.65  1.65e- 8 #>  9 mlm       TGFb     t         -0.656 5.12e- 1 #> 10 mlm       TNFa     t          1.93  5.36e- 2 #> 11 mlm       Trail    t         -2.03  4.26e- 2 #> 12 mlm       VEGF     t          2.82  4.80e- 3 #> 13 mlm       WNT      t         -1.49  1.35e- 1 #> 14 mlm       p53      t         -4.80  1.60e- 6 # Plot ggplot(contrast_acts, aes(x = reorder(source, score), y = score)) +      geom_bar(aes(fill = score), stat = \"identity\") +     scale_fill_gradient2(low = \"darkblue\", high = \"indianred\",          mid = \"whitesmoke\", midpoint = 0) +      theme_minimal() +     theme(axis.title = element_text(face = \"bold\", size = 12),         axis.text.x =              element_text(angle = 45, hjust = 1, size =10, face= \"bold\"),         axis.text.y = element_text(size =10, face= \"bold\"),         panel.grid.major = element_blank(),          panel.grid.minor = element_blank()) +     xlab(\"Pathways\") pathway <- 'MAPK'  df <- net %>%   filter(source == pathway) %>%   arrange(target) %>%   mutate(ID = target, color = \"3\") %>%   column_to_rownames('target') inter <- sort(intersect(rownames(deg),rownames(df))) df <- df[inter, ] df['t_value'] <- deg[inter, ] df <- df %>%   mutate(color = if_else(weight > 0 & t_value > 0, '1', color)) %>%   mutate(color = if_else(weight > 0 & t_value < 0, '2', color)) %>%   mutate(color = if_else(weight < 0 & t_value > 0, '2', color)) %>%   mutate(color = if_else(weight < 0 & t_value < 0, '1', color))  ggplot(df, aes(x = weight, y = t_value, color = color)) + geom_point() +   scale_colour_manual(values = c(\"red\",\"royalblue3\",\"grey\")) +   geom_label_repel(aes(label = ID)) +    theme_minimal() +   theme(legend.position = \"none\") +   geom_vline(xintercept = 0, linetype = 'dotted') +   geom_hline(yintercept = 0, linetype = 'dotted') +   ggtitle(pathway) #> Warning: ggrepel: 447 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps"},{"path":"https://saezlab.github.io/decoupleR/articles/pw_bk.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Pathway activity inference in bulk RNA-seq","text":"","code":"#> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.1 (2023-06-16) #>  os       Ubuntu 22.04.3 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       UTC #>  date     2024-03-24 #>  pandoc   3.1.1 @ /usr/local/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package      * version date (UTC) lib source #>  backports      1.4.1   2021-12-13 [1] RSPM #>  BiocManager    1.30.22 2023-08-08 [1] RSPM #>  BiocParallel   1.36.0  2023-10-24 [1] Bioconductor #>  BiocStyle    * 2.30.0  2023-10-24 [1] Bioconductor #>  bit            4.0.5   2022-11-15 [1] RSPM #>  bit64          4.0.5   2020-08-30 [1] RSPM #>  bookdown       0.36    2023-10-16 [1] RSPM #>  bslib          0.5.1   2023-08-11 [1] RSPM #>  cachem         1.0.8   2023-05-01 [1] RSPM #>  cellranger     1.1.0   2016-07-27 [1] RSPM #>  checkmate      2.3.0   2023-10-25 [1] RSPM #>  cli            3.6.1   2023-03-23 [1] RSPM #>  codetools      0.2-19  2023-02-01 [2] CRAN (R 4.3.1) #>  colorspace     2.1-0   2023-01-23 [1] RSPM #>  crayon         1.5.2   2022-09-29 [1] RSPM #>  curl           5.1.0   2023-10-02 [1] RSPM #>  decoupleR    * 2.9.6   2024-03-24 [1] Bioconductor #>  desc           1.4.2   2022-09-08 [1] RSPM #>  digest         0.6.33  2023-07-07 [1] RSPM #>  dplyr        * 1.1.3   2023-09-03 [1] RSPM #>  evaluate       0.22    2023-09-29 [1] RSPM #>  fansi          1.0.5   2023-10-08 [1] RSPM #>  farver         2.1.1   2022-07-06 [1] RSPM #>  fastmap        1.1.1   2023-02-24 [1] RSPM #>  fs             1.6.3   2023-07-20 [1] RSPM #>  generics       0.1.3   2022-07-05 [1] RSPM #>  ggplot2      * 3.4.4   2023-10-12 [1] RSPM #>  ggrepel      * 0.9.4   2023-10-13 [1] RSPM #>  glue           1.6.2   2022-02-24 [1] RSPM #>  gtable         0.3.4   2023-08-21 [1] RSPM #>  hms            1.1.3   2023-03-21 [1] RSPM #>  htmltools      0.5.6.1 2023-10-06 [1] RSPM #>  httr           1.4.7   2023-08-15 [1] RSPM #>  igraph         1.5.1   2023-08-10 [1] RSPM #>  jquerylib      0.1.4   2021-04-26 [1] RSPM #>  jsonlite       1.8.7   2023-06-29 [1] RSPM #>  knitr          1.44    2023-09-11 [1] RSPM #>  labeling       0.4.3   2023-08-29 [1] RSPM #>  later          1.3.1   2023-05-02 [1] RSPM #>  lattice        0.22-5  2023-10-24 [1] RSPM #>  lifecycle      1.0.3   2022-10-07 [1] RSPM #>  logger         0.2.2   2021-10-19 [1] RSPM #>  lubridate      1.9.3   2023-09-27 [1] RSPM #>  magrittr       2.0.3   2022-03-30 [1] RSPM #>  Matrix         1.6-1.1 2023-09-18 [1] RSPM #>  memoise        2.0.1   2021-11-26 [1] RSPM #>  munsell        0.5.0   2018-06-12 [1] RSPM #>  OmnipathR      3.10.1  2023-10-25 [1] Bioconductor #>  parallelly     1.36.0  2023-05-26 [1] RSPM #>  pheatmap     * 1.0.12  2019-01-04 [1] RSPM #>  pillar         1.9.0   2023-03-22 [1] RSPM #>  pkgconfig      2.0.3   2019-09-22 [1] RSPM #>  pkgdown        2.0.7   2022-12-14 [1] RSPM #>  prettyunits    1.2.0   2023-09-24 [1] RSPM #>  progress       1.2.2   2019-05-16 [1] RSPM #>  purrr          1.0.2   2023-08-10 [1] RSPM #>  R6             2.5.1   2021-08-19 [1] RSPM #>  ragg           1.2.6   2023-10-10 [1] RSPM #>  rappdirs       0.3.3   2021-01-31 [1] RSPM #>  RColorBrewer   1.1-3   2022-04-03 [1] RSPM #>  Rcpp           1.0.11  2023-07-06 [1] RSPM #>  readr          2.1.4   2023-02-10 [1] RSPM #>  readxl         1.4.3   2023-07-06 [1] RSPM #>  rlang          1.1.1   2023-04-28 [1] RSPM #>  rmarkdown      2.25    2023-09-18 [1] RSPM #>  rprojroot      2.0.3   2022-04-02 [1] RSPM #>  rvest          1.0.3   2022-08-19 [1] RSPM #>  sass           0.4.7   2023-07-15 [1] RSPM #>  scales         1.2.1   2022-08-20 [1] RSPM #>  selectr        0.4-2   2019-11-20 [1] RSPM #>  sessioninfo    1.2.2   2021-12-06 [1] RSPM #>  stringi        1.7.12  2023-01-11 [1] RSPM #>  stringr        1.5.0   2022-12-02 [1] RSPM #>  systemfonts    1.0.5   2023-10-09 [1] RSPM #>  textshaping    0.3.7   2023-10-09 [1] RSPM #>  tibble       * 3.2.1   2023-03-20 [1] RSPM #>  tidyr        * 1.3.0   2023-01-24 [1] RSPM #>  tidyselect     1.2.0   2022-10-10 [1] RSPM #>  timechange     0.2.0   2023-01-11 [1] RSPM #>  tzdb           0.4.0   2023-05-12 [1] RSPM #>  utf8           1.2.4   2023-10-22 [1] RSPM #>  vctrs          0.6.4   2023-10-12 [1] RSPM #>  vroom          1.6.4   2023-10-02 [1] RSPM #>  withr          2.5.1   2023-09-26 [1] RSPM #>  xfun           0.40    2023-08-09 [1] RSPM #>  xml2           1.3.5   2023-07-06 [1] RSPM #>  yaml           2.3.7   2023-01-23 [1] RSPM #>  #>  [1] /usr/local/lib/R/site-library #>  [2] /usr/local/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://saezlab.github.io/decoupleR/articles/pw_sc.html","id":"loading-packages","dir":"Articles","previous_headings":"","what":"Loading packages","title":"Pathway activity inference from scRNA-seq","text":"First, need load relevant packages, Seurat handle scRNA-seq data decoupleR use statistical methods.","code":"## We load the required packages library(Seurat) library(decoupleR)  # Only needed for data handling and plotting library(dplyr) library(tibble) library(tidyr) library(patchwork) library(ggplot2) library(pheatmap)"},{"path":"https://saezlab.github.io/decoupleR/articles/pw_sc.html","id":"loading-the-data-set","dir":"Articles","previous_headings":"","what":"Loading the data-set","title":"Pathway activity inference from scRNA-seq","text":"used -sampled version data used Seurat vignette. can open data like : can observe different cell types:","code":"inputs_dir <- system.file(\"extdata\", package = \"decoupleR\") data <- readRDS(file.path(inputs_dir, \"sc_data.rds\")) DimPlot(data, reduction = \"umap\", label = TRUE, pt.size = 0.5) + NoLegend()"},{"path":"https://saezlab.github.io/decoupleR/articles/pw_sc.html","id":"progeny-model","dir":"Articles","previous_headings":"Loading the data-set","what":"PROGENy model","title":"Pathway activity inference from scRNA-seq","text":"PROGENy comprehensive resource containing curated collection pathways target genes, weights interaction. example use human weights (organisms available) use top 500 responsive genes ranked p-value. brief description pathway: Androgen: involved growth development male reproductive organs. EGFR: regulates growth, survival, migration, apoptosis, proliferation, differentiation mammalian cells Estrogen: promotes growth development female reproductive organs. Hypoxia: promotes angiogenesis metabolic reprogramming O2 levels low. JAK-STAT: involved immunity, cell division, cell death, tumor formation. MAPK: integrates external signals promotes cell growth proliferation. NFkB: regulates immune response, cytokine production cell survival. p53: regulates cell cycle, apoptosis, DNA repair tumor suppression. PI3K: promotes growth proliferation. TGFb: involved development, homeostasis, repair tissues. TNFa: mediates haematopoiesis, immune surveillance, tumour regression protection infection. Trail: induces apoptosis. VEGF: mediates angiogenesis, vascular permeability, cell migration. WNT: regulates organ morphogenesis development tissue repair. access can use decoupleR:","code":"net <- get_progeny(organism = 'human', top = 500) net #> # A tibble: 7,000 × 4 #>    source   target  weight  p_value #>    <chr>    <chr>    <dbl>    <dbl> #>  1 Androgen TMPRSS2  11.5  2.38e-47 #>  2 Androgen NKX3-1   10.6  2.21e-44 #>  3 Androgen MBOAT2   10.5  4.63e-44 #>  4 Androgen KLK2     10.2  1.94e-40 #>  5 Androgen SARG     11.4  2.79e-40 #>  6 Androgen SLC38A4   7.36 1.25e-39 #>  7 Androgen MTMR9     6.13 2.53e-38 #>  8 Androgen ZBTB16   10.6  1.57e-36 #>  9 Androgen KCNN2     9.47 7.71e-36 #> 10 Androgen OPRK1    -5.63 1.11e-35 #> # ℹ 6,990 more rows"},{"path":"https://saezlab.github.io/decoupleR/articles/pw_sc.html","id":"activity-inference-with-multivariate-linear-model-mlm","dir":"Articles","previous_headings":"","what":"Activity inference with Multivariate Linear Model (MLM)","title":"Pathway activity inference from scRNA-seq","text":"infer pathway enrichment scores run Multivariate Linear Model (mlm) method. sample dataset (mat), fits linear model predicts observed gene expression based pathways’ Pathway-Gene interactions weights. fitted, obtained t-values slopes scores. positive, interpret pathway active negative interpret inactive. run decoupleR methods, need input matrix (mat), input prior knowledge network/resource (net), name columns net want use.","code":"# Extract the normalized log-transformed counts mat <- as.matrix(data@assays$RNA@data)  # Run mlm acts <- run_mlm(mat=mat, net=net, .source='source', .target='target',                 .mor='weight', minsize = 5) acts #> # A tibble: 2,240 × 5 #>    statistic source   condition         score  p_value #>    <chr>     <chr>    <chr>             <dbl>    <dbl> #>  1 mlm       Androgen AAACATACAACCAC-1  0.559 0.576    #>  2 mlm       EGFR     AAACATACAACCAC-1  3.63  0.000290 #>  3 mlm       Estrogen AAACATACAACCAC-1 -0.886 0.375    #>  4 mlm       Hypoxia  AAACATACAACCAC-1  1.22  0.224    #>  5 mlm       JAK-STAT AAACATACAACCAC-1 -1.02  0.308    #>  6 mlm       MAPK     AAACATACAACCAC-1 -2.74  0.00619  #>  7 mlm       NFkB     AAACATACAACCAC-1 -0.230 0.818    #>  8 mlm       PI3K     AAACATACAACCAC-1 -1.09  0.276    #>  9 mlm       TGFb     AAACATACAACCAC-1  0.248 0.804    #> 10 mlm       TNFa     AAACATACAACCAC-1  2.22  0.0264   #> # ℹ 2,230 more rows"},{"path":"https://saezlab.github.io/decoupleR/articles/pw_sc.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Pathway activity inference from scRNA-seq","text":"obtained results, select ulm activities store object new assay called pathwaysmlm: new assay can used plot activities. visualize Trail pathway, associated apoptosis, seems B NK cells active.","code":"# Extract mlm and store it in pathwaysmlm in data data[['pathwaysmlm']] <- acts %>%   pivot_wider(id_cols = 'source', names_from = 'condition',               values_from = 'score') %>%   column_to_rownames('source') %>%   Seurat::CreateAssayObject(.)  # Change assay DefaultAssay(object = data) <- \"pathwaysmlm\"  # Scale the data data <- ScaleData(data) data@assays$pathwaysmlm@data <- data@assays$pathwaysmlm@scale.data p1 <- DimPlot(data, reduction = \"umap\", label = TRUE, pt.size = 0.5) +    NoLegend() + ggtitle('Cell types') p2 <- (FeaturePlot(data, features = c(\"Trail\")) &    scale_colour_gradient2(low = 'blue', mid = 'white', high = 'red')) +   ggtitle('Trail activity') p1 | p2"},{"path":"https://saezlab.github.io/decoupleR/articles/pw_sc.html","id":"exploration","dir":"Articles","previous_headings":"","what":"Exploration","title":"Pathway activity inference from scRNA-seq","text":"can also see mean activity per group across pathways:  specific example, can observe Trail active B NK cells.","code":"# Extract activities from object as a long dataframe df <- t(as.matrix(data@assays$pathwaysmlm@data)) %>%   as.data.frame() %>%   mutate(cluster = Idents(data)) %>%   pivot_longer(cols = -cluster, names_to = \"source\", values_to = \"score\") %>%   group_by(cluster, source) %>%   summarise(mean = mean(score))  # Transform to wide matrix top_acts_mat <- df %>%   pivot_wider(id_cols = 'cluster', names_from = 'source',               values_from = 'mean') %>%   column_to_rownames('cluster') %>%   as.matrix()  # Choose color palette palette_length = 100 my_color = colorRampPalette(c(\"Darkblue\", \"white\",\"red\"))(palette_length)  my_breaks <- c(seq(-2, 0, length.out=ceiling(palette_length/2) + 1),                seq(0.05, 2, length.out=floor(palette_length/2)))  # Plot pheatmap(top_acts_mat, border_color = NA, color=my_color, breaks = my_breaks)"},{"path":"https://saezlab.github.io/decoupleR/articles/pw_sc.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Pathway activity inference from scRNA-seq","text":"","code":"#> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.1 (2023-06-16) #>  os       Ubuntu 22.04.3 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       UTC #>  date     2024-03-24 #>  pandoc   3.1.1 @ /usr/local/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package          * version date (UTC) lib source #>  abind              1.4-5   2016-07-21 [1] RSPM #>  backports          1.4.1   2021-12-13 [1] RSPM #>  BiocManager        1.30.22 2023-08-08 [1] RSPM #>  BiocParallel       1.36.0  2023-10-24 [1] Bioconductor #>  BiocStyle        * 2.30.0  2023-10-24 [1] Bioconductor #>  bit                4.0.5   2022-11-15 [1] RSPM #>  bit64              4.0.5   2020-08-30 [1] RSPM #>  bookdown           0.36    2023-10-16 [1] RSPM #>  bslib              0.5.1   2023-08-11 [1] RSPM #>  cachem             1.0.8   2023-05-01 [1] RSPM #>  cellranger         1.1.0   2016-07-27 [1] RSPM #>  checkmate          2.3.0   2023-10-25 [1] RSPM #>  cli                3.6.1   2023-03-23 [1] RSPM #>  cluster            2.1.4   2022-08-22 [2] CRAN (R 4.3.1) #>  codetools          0.2-19  2023-02-01 [2] CRAN (R 4.3.1) #>  colorspace         2.1-0   2023-01-23 [1] RSPM #>  cowplot            1.1.1   2020-12-30 [1] RSPM #>  crayon             1.5.2   2022-09-29 [1] RSPM #>  curl               5.1.0   2023-10-02 [1] RSPM #>  data.table         1.14.8  2023-02-17 [1] RSPM #>  decoupleR        * 2.9.6   2024-03-24 [1] Bioconductor #>  deldir             1.0-9   2023-05-17 [1] RSPM #>  desc               1.4.2   2022-09-08 [1] RSPM #>  digest             0.6.33  2023-07-07 [1] RSPM #>  dotCall64          1.1-0   2023-10-17 [1] RSPM #>  dplyr            * 1.1.3   2023-09-03 [1] RSPM #>  ellipsis           0.3.2   2021-04-29 [1] RSPM #>  evaluate           0.22    2023-09-29 [1] RSPM #>  fansi              1.0.5   2023-10-08 [1] RSPM #>  farver             2.1.1   2022-07-06 [1] RSPM #>  fastDummies        1.7.3   2023-07-06 [1] RSPM (R 4.3.0) #>  fastmap            1.1.1   2023-02-24 [1] RSPM #>  fitdistrplus       1.1-11  2023-04-25 [1] RSPM #>  fs                 1.6.3   2023-07-20 [1] RSPM #>  future             1.33.0  2023-07-01 [1] RSPM #>  future.apply       1.11.0  2023-05-21 [1] RSPM #>  generics           0.1.3   2022-07-05 [1] RSPM #>  ggplot2          * 3.4.4   2023-10-12 [1] RSPM #>  ggrepel            0.9.4   2023-10-13 [1] RSPM #>  ggridges           0.5.4   2022-09-26 [1] RSPM #>  globals            0.16.2  2022-11-21 [1] RSPM #>  glue               1.6.2   2022-02-24 [1] RSPM #>  goftest            1.2-3   2021-10-07 [1] RSPM #>  gridExtra          2.3     2017-09-09 [1] RSPM #>  gtable             0.3.4   2023-08-21 [1] RSPM #>  hms                1.1.3   2023-03-21 [1] RSPM #>  htmltools          0.5.6.1 2023-10-06 [1] RSPM #>  htmlwidgets        1.6.2   2023-03-17 [1] RSPM #>  httpuv             1.6.12  2023-10-23 [1] RSPM #>  httr               1.4.7   2023-08-15 [1] RSPM #>  ica                1.0-3   2022-07-08 [1] RSPM #>  igraph             1.5.1   2023-08-10 [1] RSPM #>  irlba              2.3.5.1 2022-10-03 [1] RSPM #>  jquerylib          0.1.4   2021-04-26 [1] RSPM #>  jsonlite           1.8.7   2023-06-29 [1] RSPM #>  KernSmooth         2.23-22 2023-07-10 [1] RSPM #>  knitr              1.44    2023-09-11 [1] RSPM #>  labeling           0.4.3   2023-08-29 [1] RSPM #>  later              1.3.1   2023-05-02 [1] RSPM #>  lattice            0.22-5  2023-10-24 [1] RSPM #>  lazyeval           0.2.2   2019-03-15 [1] RSPM #>  leiden             0.4.3   2022-09-10 [1] RSPM #>  lifecycle          1.0.3   2022-10-07 [1] RSPM #>  listenv            0.9.0   2022-12-16 [1] RSPM #>  lmtest             0.9-40  2022-03-21 [1] RSPM #>  logger             0.2.2   2021-10-19 [1] RSPM #>  lubridate          1.9.3   2023-09-27 [1] RSPM #>  magrittr           2.0.3   2022-03-30 [1] RSPM #>  MASS               7.3-60  2023-05-04 [2] CRAN (R 4.3.1) #>  Matrix             1.6-1.1 2023-09-18 [1] RSPM #>  matrixStats        1.1.0   2023-11-07 [1] RSPM (R 4.3.0) #>  memoise            2.0.1   2021-11-26 [1] RSPM #>  mime               0.12    2021-09-28 [1] RSPM #>  miniUI             0.1.1.1 2018-05-18 [1] RSPM #>  munsell            0.5.0   2018-06-12 [1] RSPM #>  nlme               3.1-163 2023-08-09 [1] RSPM #>  OmnipathR          3.10.1  2023-10-25 [1] Bioconductor #>  parallelly         1.36.0  2023-05-26 [1] RSPM #>  patchwork        * 1.1.3   2023-08-14 [1] RSPM #>  pbapply            1.7-2   2023-06-27 [1] RSPM #>  pheatmap         * 1.0.12  2019-01-04 [1] RSPM #>  pillar             1.9.0   2023-03-22 [1] RSPM #>  pkgconfig          2.0.3   2019-09-22 [1] RSPM #>  pkgdown            2.0.7   2022-12-14 [1] RSPM #>  plotly             4.10.3  2023-10-21 [1] RSPM #>  plyr               1.8.9   2023-10-02 [1] RSPM #>  png                0.1-8   2022-11-29 [1] RSPM #>  polyclip           1.10-6  2023-09-27 [1] RSPM #>  prettyunits        1.2.0   2023-09-24 [1] RSPM #>  progress           1.2.2   2019-05-16 [1] RSPM #>  progressr          0.14.0  2023-08-10 [1] RSPM #>  promises           1.2.1   2023-08-10 [1] RSPM #>  purrr              1.0.2   2023-08-10 [1] RSPM #>  R6                 2.5.1   2021-08-19 [1] RSPM #>  ragg               1.2.6   2023-10-10 [1] RSPM #>  RANN               2.6.1   2019-01-08 [1] RSPM #>  rappdirs           0.3.3   2021-01-31 [1] RSPM #>  RColorBrewer       1.1-3   2022-04-03 [1] RSPM #>  Rcpp               1.0.11  2023-07-06 [1] RSPM #>  RcppAnnoy          0.0.21  2023-07-02 [1] RSPM #>  RcppHNSW           0.5.0   2023-09-19 [1] RSPM (R 4.3.0) #>  readr              2.1.4   2023-02-10 [1] RSPM #>  readxl             1.4.3   2023-07-06 [1] RSPM #>  reshape2           1.4.4   2020-04-09 [1] RSPM #>  reticulate         1.34.0  2023-10-12 [1] RSPM #>  rlang              1.1.1   2023-04-28 [1] RSPM #>  rmarkdown          2.25    2023-09-18 [1] RSPM #>  ROCR               1.0-11  2020-05-02 [1] RSPM #>  rprojroot          2.0.3   2022-04-02 [1] RSPM #>  RSpectra           0.16-1  2022-04-24 [1] RSPM (R 4.3.0) #>  Rtsne              0.16    2022-04-17 [1] RSPM #>  rvest              1.0.3   2022-08-19 [1] RSPM #>  sass               0.4.7   2023-07-15 [1] RSPM #>  scales             1.2.1   2022-08-20 [1] RSPM #>  scattermore        1.2     2023-06-12 [1] RSPM #>  sctransform        0.4.1   2023-10-19 [1] RSPM #>  selectr            0.4-2   2019-11-20 [1] RSPM #>  sessioninfo        1.2.2   2021-12-06 [1] RSPM #>  Seurat           * 5.0.0   2023-11-04 [1] RSPM (R 4.3.0) #>  SeuratObject     * 5.0.0   2023-10-26 [1] RSPM #>  shiny              1.7.5.1 2023-10-14 [1] RSPM #>  sp               * 2.1-1   2023-10-16 [1] RSPM #>  spam               2.10-0  2023-10-23 [1] RSPM #>  spatstat.data      3.0-3   2023-10-24 [1] RSPM #>  spatstat.explore   3.2-5   2023-10-22 [1] RSPM #>  spatstat.geom      3.2-7   2023-10-20 [1] RSPM #>  spatstat.random    3.2-1   2023-10-21 [1] RSPM #>  spatstat.sparse    3.0-3   2023-10-24 [1] RSPM #>  spatstat.utils     3.0-4   2023-10-24 [1] RSPM #>  stringi            1.7.12  2023-01-11 [1] RSPM #>  stringr            1.5.0   2022-12-02 [1] RSPM #>  survival           3.5-7   2023-08-14 [1] RSPM #>  systemfonts        1.0.5   2023-10-09 [1] RSPM #>  tensor             1.5     2012-05-05 [1] RSPM #>  textshaping        0.3.7   2023-10-09 [1] RSPM #>  tibble           * 3.2.1   2023-03-20 [1] RSPM #>  tidyr            * 1.3.0   2023-01-24 [1] RSPM #>  tidyselect         1.2.0   2022-10-10 [1] RSPM #>  timechange         0.2.0   2023-01-11 [1] RSPM #>  tzdb               0.4.0   2023-05-12 [1] RSPM #>  utf8               1.2.4   2023-10-22 [1] RSPM #>  uwot               0.1.16  2023-06-29 [1] RSPM #>  vctrs              0.6.4   2023-10-12 [1] RSPM #>  viridisLite        0.4.2   2023-05-02 [1] RSPM #>  vroom              1.6.4   2023-10-02 [1] RSPM #>  withr              2.5.1   2023-09-26 [1] RSPM #>  xfun               0.40    2023-08-09 [1] RSPM #>  xml2               1.3.5   2023-07-06 [1] RSPM #>  xtable             1.8-4   2019-04-21 [1] RSPM #>  yaml               2.3.7   2023-01-23 [1] RSPM #>  zoo                1.8-12  2023-04-13 [1] RSPM #>  #>  [1] /usr/local/lib/R/site-library #>  [2] /usr/local/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_bk.html","id":"loading-packages","dir":"Articles","previous_headings":"","what":"Loading packages","title":"Transcription factor activity inference in bulk RNA-seq","text":"First, need load relevant packages:","code":"## We load the required packages library(decoupleR) library(dplyr) library(tibble) library(tidyr) library(ggplot2) library(pheatmap) library(ggrepel)"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_bk.html","id":"loading-the-data-set","dir":"Articles","previous_headings":"","what":"Loading the data-set","title":"Transcription factor activity inference in bulk RNA-seq","text":"used already processed bulk RNA-seq data-set. provide normalized log-transformed counts, experimental design meta-data Differential Expressed Genes (DEGs) obtained using limma. example use limma used DeSeq2, edgeR statistical framework. decoupleR requires gene level statistic perform enrichment analysis agnostic generated. However, recommend use statistics include direction change significance, example t-value obtained limma(t) DeSeq2(stat). edgeR return statistic can create weighting obtained logFC pvalue formula: -log10(pvalue) * logFC. can open data like : data can extract mentioned information. see normalized log-transformed counts: design meta-data: results limma, interested extracting obtained t-value p-value contrast:","code":"inputs_dir <- system.file(\"extdata\", package = \"decoupleR\") data <- readRDS(file.path(inputs_dir, \"bk_data.rds\")) # Remove NAs and set row names counts <- data$counts %>%   dplyr::mutate_if(~ any(is.na(.x)), ~ if_else(is.na(.x),0,.x)) %>%    column_to_rownames(var = \"gene\") %>%    as.matrix() head(counts) #>          PANC1.WT.Rep1 PANC1.WT.Rep2 PANC1.WT.Rep3 PANC1.FOXA2KO.Rep1 #> NOC2L        10.052588     11.949123     12.057774          12.312291 #> PLEKHN1       7.535115      8.125993      8.714880           8.048196 #> PERM1         6.281242      6.424582      6.589668           6.293285 #> ISG15        10.938252     11.469081     11.425415          11.549986 #> AGRN          6.956335      7.196108      7.522550           7.061549 #> C1orf159      9.546224      9.788721      9.794589           9.850830 #>          PANC1.FOXA2KO.Rep2 PANC1.FOXA2KO.Rep3 #> NOC2L             12.139918          11.494205 #> PLEKHN1            8.290154           8.621239 #> PERM1              6.486136           6.775344 #> ISG15             11.371464          11.178157 #> AGRN               7.485534           7.071555 #> C1orf159           9.988069           9.965357 design <- data$design design #> # A tibble: 6 × 2 #>   sample             condition     #>   <chr>              <chr>         #> 1 PANC1.WT.Rep1      PANC1.WT      #> 2 PANC1.WT.Rep2      PANC1.WT      #> 3 PANC1.WT.Rep3      PANC1.WT      #> 4 PANC1.FOXA2KO.Rep1 PANC1.FOXA2KO #> 5 PANC1.FOXA2KO.Rep2 PANC1.FOXA2KO #> 6 PANC1.FOXA2KO.Rep3 PANC1.FOXA2KO # Extract t-values per gene deg <- data$limma_ttop %>%     select(ID, logFC, t, P.Value) %>%      filter(!is.na(t)) %>%      column_to_rownames(var = \"ID\") %>%     as.matrix() head(deg) #>             logFC          t      P.Value #> RHBDL2  -1.823940 -12.810588 3.030276e-06 #> PLEKHH2 -1.568830 -10.794453 9.932046e-06 #> HEG1    -1.725806  -9.788112 1.939734e-05 #> CLU     -1.786200  -9.761618 1.975813e-05 #> FHL1     2.087082   8.950191 3.552199e-05 #> RBP4    -1.728960  -8.529074 4.904579e-05"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_bk.html","id":"collectri-network","dir":"Articles","previous_headings":"","what":"CollecTRI network","title":"Transcription factor activity inference in bulk RNA-seq","text":"CollecTRI comprehensive resource containing curated collection TFs transcriptional targets compiled 12 different resources. collection provides increased coverage transcription factors superior performance identifying perturbed TFs compared previous DoRothEA network literature based GRNs. Similar DoRothEA, interactions weighted mode regulation (activation inhibition). example use human version (mouse rat also available). can use decoupleR retrieve OmniPath. argument split_complexes keeps complexes splits subunits, default recommend keep complexes together.","code":"net <- get_collectri(organism='human', split_complexes=FALSE) net #> # A tibble: 43,178 × 3 #>    source target   mor #>    <chr>  <chr>  <dbl> #>  1 MYC    TERT       1 #>  2 SPI1   BGLAP      1 #>  3 SMAD3  JUN        1 #>  4 SMAD4  JUN        1 #>  5 STAT5A IL2        1 #>  6 STAT5B IL2        1 #>  7 RELA   FAS        1 #>  8 WT1    NR0B1      1 #>  9 NR0B2  CASP1      1 #> 10 SP1    ALDOA      1 #> # ℹ 43,168 more rows"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_bk.html","id":"activity-inference-with-univariate-linear-model-ulm","dir":"Articles","previous_headings":"","what":"Activity inference with Univariate Linear Model (ULM)","title":"Transcription factor activity inference in bulk RNA-seq","text":"infer TF enrichment scores run Univariate Linear Model (ulm) method. sample dataset (mat) TF network (net), fits linear model predicts observed gene expression based solely TF’s TF-Gene interaction weights. fitted, obtained t-value slope score. positive, interpret TF active negative interpret inactive. run decoupleR methods, need input matrix (mat), input prior knowledge network/resource (net), name columns net want use.","code":"# Run ulm sample_acts <- run_ulm(mat=counts, net=net, .source='source', .target='target',                   .mor='mor', minsize = 5) sample_acts #> # A tibble: 3,480 × 5 #>    statistic source condition           score p_value #>    <chr>     <chr>  <chr>               <dbl>   <dbl> #>  1 ulm       ABL1   PANC1.FOXA2KO.Rep1 -0.428  0.669  #>  2 ulm       ABL1   PANC1.FOXA2KO.Rep2 -0.104  0.917  #>  3 ulm       ABL1   PANC1.FOXA2KO.Rep3  0.335  0.738  #>  4 ulm       ABL1   PANC1.WT.Rep1       0.142  0.887  #>  5 ulm       ABL1   PANC1.WT.Rep2      -0.344  0.731  #>  6 ulm       ABL1   PANC1.WT.Rep3      -0.523  0.601  #>  7 ulm       AHR    PANC1.FOXA2KO.Rep1  1.58   0.113  #>  8 ulm       AHR    PANC1.FOXA2KO.Rep2  1.70   0.0885 #>  9 ulm       AHR    PANC1.FOXA2KO.Rep3  1.85   0.0640 #> 10 ulm       AHR    PANC1.WT.Rep1       1.38   0.169  #> # ℹ 3,470 more rows"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_bk.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Transcription factor activity inference in bulk RNA-seq","text":"obtained results observe variable activities across samples heat-map:  can also infer TF activities t-values DEGs KO WT: Let’s show changes activity KO WT:  TFs GLI3 SPDEF deactivated KO compared WT, MUC NFKB1 seem activated. can visualize differential target genes TF along p-values interpret results. example, let’s see genes belong SP1:  blue means sign multiplying mor t-value negative, meaning genes “deactivating” TF, red means sign positive, meaning genes “activating” TF.","code":"n_tfs <- 25  # Transform to wide matrix sample_acts_mat <- sample_acts %>%   pivot_wider(id_cols = 'condition', names_from = 'source',               values_from = 'score') %>%   column_to_rownames('condition') %>%   as.matrix()  # Get top tfs with more variable means across clusters tfs <- sample_acts %>%   group_by(source) %>%   summarise(std = sd(score)) %>%   arrange(-abs(std)) %>%   head(n_tfs) %>%   pull(source) sample_acts_mat <- sample_acts_mat[,tfs]  # Scale per sample sample_acts_mat <- scale(sample_acts_mat)  # Choose color palette palette_length = 100 my_color = colorRampPalette(c(\"Darkblue\", \"white\",\"red\"))(palette_length)  my_breaks <- c(seq(-3, 0, length.out=ceiling(palette_length/2) + 1),                seq(0.05, 3, length.out=floor(palette_length/2)))  # Plot pheatmap(sample_acts_mat, border_color = NA, color=my_color, breaks = my_breaks) # Run ulm contrast_acts <- run_ulm(mat=deg[, 't', drop=FALSE], net=net, .source='source', .target='target',                   .mor='mor', minsize = 5) contrast_acts #> # A tibble: 580 × 5 #>    statistic source condition   score p_value #>    <chr>     <chr>  <chr>       <dbl>   <dbl> #>  1 ulm       ABL1   t          1.08    0.280  #>  2 ulm       AHR    t          1.19    0.234  #>  3 ulm       AIRE   t         -0.155   0.877  #>  4 ulm       AP1    t          2.42    0.0154 #>  5 ulm       APEX1  t          0.877   0.380  #>  6 ulm       AR     t         -0.264   0.792  #>  7 ulm       ARID1A t         -0.236   0.813  #>  8 ulm       ARID3A t          1.85    0.0639 #>  9 ulm       ARID3B t          1.24    0.215  #> 10 ulm       ARID4A t         -0.0674  0.946  #> # ℹ 570 more rows # Filter top TFs in both signs f_contrast_acts <- contrast_acts %>%   mutate(rnk = NA) msk <- f_contrast_acts$score > 0 f_contrast_acts[msk, 'rnk'] <- rank(-f_contrast_acts[msk, 'score']) f_contrast_acts[!msk, 'rnk'] <- rank(-abs(f_contrast_acts[!msk, 'score'])) tfs <- f_contrast_acts %>%   arrange(rnk) %>%   head(n_tfs) %>%   pull(source) f_contrast_acts <- f_contrast_acts %>%   filter(source %in% tfs)  # Plot ggplot(f_contrast_acts, aes(x = reorder(source, score), y = score)) +      geom_bar(aes(fill = score), stat = \"identity\") +     scale_fill_gradient2(low = \"darkblue\", high = \"indianred\",          mid = \"whitesmoke\", midpoint = 0) +      theme_minimal() +     theme(axis.title = element_text(face = \"bold\", size = 12),         axis.text.x =              element_text(angle = 45, hjust = 1, size =10, face= \"bold\"),         axis.text.y = element_text(size =10, face= \"bold\"),         panel.grid.major = element_blank(),          panel.grid.minor = element_blank()) +     xlab(\"TFs\") tf <- 'SP1'  df <- net %>%   filter(source == tf) %>%   arrange(target) %>%   mutate(ID = target, color = \"3\") %>%   column_to_rownames('target')  inter <- sort(intersect(rownames(deg),rownames(df))) df <- df[inter, ] df[,c('logfc', 't_value', 'p_value')] <- deg[inter, ] df <- df %>%   mutate(color = if_else(mor > 0 & t_value > 0, '1', color)) %>%   mutate(color = if_else(mor > 0 & t_value < 0, '2', color)) %>%   mutate(color = if_else(mor < 0 & t_value > 0, '2', color)) %>%   mutate(color = if_else(mor < 0 & t_value < 0, '1', color))  ggplot(df, aes(x = logfc, y = -log10(p_value), color = color, size=abs(mor))) +   geom_point() +   scale_colour_manual(values = c(\"red\",\"royalblue3\",\"grey\")) +   geom_label_repel(aes(label = ID, size=1)) +    theme_minimal() +   theme(legend.position = \"none\") +   geom_vline(xintercept = 0, linetype = 'dotted') +   geom_hline(yintercept = 0, linetype = 'dotted') +   ggtitle(tf)"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_bk.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Transcription factor activity inference in bulk RNA-seq","text":"","code":"#> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.1 (2023-06-16) #>  os       Ubuntu 22.04.3 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       UTC #>  date     2024-03-24 #>  pandoc   3.1.1 @ /usr/local/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package      * version date (UTC) lib source #>  backports      1.4.1   2021-12-13 [1] RSPM #>  BiocManager    1.30.22 2023-08-08 [1] RSPM #>  BiocParallel   1.36.0  2023-10-24 [1] Bioconductor #>  BiocStyle    * 2.30.0  2023-10-24 [1] Bioconductor #>  bit            4.0.5   2022-11-15 [1] RSPM #>  bit64          4.0.5   2020-08-30 [1] RSPM #>  bookdown       0.36    2023-10-16 [1] RSPM #>  bslib          0.5.1   2023-08-11 [1] RSPM #>  cachem         1.0.8   2023-05-01 [1] RSPM #>  cellranger     1.1.0   2016-07-27 [1] RSPM #>  checkmate      2.3.0   2023-10-25 [1] RSPM #>  cli            3.6.1   2023-03-23 [1] RSPM #>  codetools      0.2-19  2023-02-01 [2] CRAN (R 4.3.1) #>  colorspace     2.1-0   2023-01-23 [1] RSPM #>  crayon         1.5.2   2022-09-29 [1] RSPM #>  curl           5.1.0   2023-10-02 [1] RSPM #>  decoupleR    * 2.9.6   2024-03-24 [1] Bioconductor #>  desc           1.4.2   2022-09-08 [1] RSPM #>  digest         0.6.33  2023-07-07 [1] RSPM #>  dplyr        * 1.1.3   2023-09-03 [1] RSPM #>  evaluate       0.22    2023-09-29 [1] RSPM #>  fansi          1.0.5   2023-10-08 [1] RSPM #>  farver         2.1.1   2022-07-06 [1] RSPM #>  fastmap        1.1.1   2023-02-24 [1] RSPM #>  fs             1.6.3   2023-07-20 [1] RSPM #>  generics       0.1.3   2022-07-05 [1] RSPM #>  ggplot2      * 3.4.4   2023-10-12 [1] RSPM #>  ggrepel      * 0.9.4   2023-10-13 [1] RSPM #>  glue           1.6.2   2022-02-24 [1] RSPM #>  gtable         0.3.4   2023-08-21 [1] RSPM #>  hms            1.1.3   2023-03-21 [1] RSPM #>  htmltools      0.5.6.1 2023-10-06 [1] RSPM #>  httr           1.4.7   2023-08-15 [1] RSPM #>  igraph         1.5.1   2023-08-10 [1] RSPM #>  jquerylib      0.1.4   2021-04-26 [1] RSPM #>  jsonlite       1.8.7   2023-06-29 [1] RSPM #>  knitr          1.44    2023-09-11 [1] RSPM #>  labeling       0.4.3   2023-08-29 [1] RSPM #>  later          1.3.1   2023-05-02 [1] RSPM #>  lattice        0.22-5  2023-10-24 [1] RSPM #>  lifecycle      1.0.3   2022-10-07 [1] RSPM #>  logger         0.2.2   2021-10-19 [1] RSPM #>  lubridate      1.9.3   2023-09-27 [1] RSPM #>  magrittr       2.0.3   2022-03-30 [1] RSPM #>  Matrix         1.6-1.1 2023-09-18 [1] RSPM #>  memoise        2.0.1   2021-11-26 [1] RSPM #>  munsell        0.5.0   2018-06-12 [1] RSPM #>  OmnipathR      3.10.1  2023-10-25 [1] Bioconductor #>  parallelly     1.36.0  2023-05-26 [1] RSPM #>  pheatmap     * 1.0.12  2019-01-04 [1] RSPM #>  pillar         1.9.0   2023-03-22 [1] RSPM #>  pkgconfig      2.0.3   2019-09-22 [1] RSPM #>  pkgdown        2.0.7   2022-12-14 [1] RSPM #>  prettyunits    1.2.0   2023-09-24 [1] RSPM #>  progress       1.2.2   2019-05-16 [1] RSPM #>  purrr          1.0.2   2023-08-10 [1] RSPM #>  R6             2.5.1   2021-08-19 [1] RSPM #>  ragg           1.2.6   2023-10-10 [1] RSPM #>  rappdirs       0.3.3   2021-01-31 [1] RSPM #>  RColorBrewer   1.1-3   2022-04-03 [1] RSPM #>  Rcpp           1.0.11  2023-07-06 [1] RSPM #>  readr          2.1.4   2023-02-10 [1] RSPM #>  readxl         1.4.3   2023-07-06 [1] RSPM #>  rlang          1.1.1   2023-04-28 [1] RSPM #>  rmarkdown      2.25    2023-09-18 [1] RSPM #>  rprojroot      2.0.3   2022-04-02 [1] RSPM #>  rvest          1.0.3   2022-08-19 [1] RSPM #>  sass           0.4.7   2023-07-15 [1] RSPM #>  scales         1.2.1   2022-08-20 [1] RSPM #>  selectr        0.4-2   2019-11-20 [1] RSPM #>  sessioninfo    1.2.2   2021-12-06 [1] RSPM #>  stringi        1.7.12  2023-01-11 [1] RSPM #>  stringr        1.5.0   2022-12-02 [1] RSPM #>  systemfonts    1.0.5   2023-10-09 [1] RSPM #>  textshaping    0.3.7   2023-10-09 [1] RSPM #>  tibble       * 3.2.1   2023-03-20 [1] RSPM #>  tidyr        * 1.3.0   2023-01-24 [1] RSPM #>  tidyselect     1.2.0   2022-10-10 [1] RSPM #>  timechange     0.2.0   2023-01-11 [1] RSPM #>  tzdb           0.4.0   2023-05-12 [1] RSPM #>  utf8           1.2.4   2023-10-22 [1] RSPM #>  vctrs          0.6.4   2023-10-12 [1] RSPM #>  vroom          1.6.4   2023-10-02 [1] RSPM #>  withr          2.5.1   2023-09-26 [1] RSPM #>  xfun           0.40    2023-08-09 [1] RSPM #>  xml2           1.3.5   2023-07-06 [1] RSPM #>  yaml           2.3.7   2023-01-23 [1] RSPM #>  #>  [1] /usr/local/lib/R/site-library #>  [2] /usr/local/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_sc.html","id":"loading-packages","dir":"Articles","previous_headings":"","what":"Loading packages","title":"Transcription factor activity inference from scRNA-seq","text":"First, need load relevant packages, Seurat handle scRNA-seq data decoupleR use statistical methods.","code":"## We load the required packages library(Seurat) library(decoupleR)  # Only needed for data handling and plotting library(dplyr) library(tibble) library(tidyr) library(patchwork) library(ggplot2) library(pheatmap)"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_sc.html","id":"loading-the-data-set","dir":"Articles","previous_headings":"","what":"Loading the data-set","title":"Transcription factor activity inference from scRNA-seq","text":"used -sampled version data used Seurat vignette. can open data like : can observe different cell types:","code":"inputs_dir <- system.file(\"extdata\", package = \"decoupleR\") data <- readRDS(file.path(inputs_dir, \"sc_data.rds\")) DimPlot(data, reduction = \"umap\", label = TRUE, pt.size = 0.5) + NoLegend()"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_sc.html","id":"collectri-network","dir":"Articles","previous_headings":"","what":"CollecTRI network","title":"Transcription factor activity inference from scRNA-seq","text":"CollecTRI comprehensive resource containing curated collection TFs transcriptional targets compiled 12 different resources. collection provides increased coverage transcription factors superior performance identifying perturbed TFs compared previous DoRothEA network literature based GRNs. Similar DoRothEA, interactions weighted mode regulation (activation inhibition). example use human version (mouse rat also available). can use decoupleR retrieve OmniPath. argument split_complexes keeps complexes splits subunits, default recommend keep complexes together.","code":"net <- get_collectri(organism='human', split_complexes=FALSE) net #> # A tibble: 43,178 × 3 #>    source target   mor #>    <chr>  <chr>  <dbl> #>  1 MYC    TERT       1 #>  2 SPI1   BGLAP      1 #>  3 SMAD3  JUN        1 #>  4 SMAD4  JUN        1 #>  5 STAT5A IL2        1 #>  6 STAT5B IL2        1 #>  7 RELA   FAS        1 #>  8 WT1    NR0B1      1 #>  9 NR0B2  CASP1      1 #> 10 SP1    ALDOA      1 #> # ℹ 43,168 more rows"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_sc.html","id":"activity-inference-with-univariate-linear-model-ulm","dir":"Articles","previous_headings":"","what":"Activity inference with Univariate Linear Model (ULM)","title":"Transcription factor activity inference from scRNA-seq","text":"infer TF enrichment scores run Univariate Linear Model (ulm) method. sample dataset (mat) TF network (net), fits linear model predicts observed gene expression based solely TF’s TF-Gene interaction weights. fitted, obtained t-value slope score. positive, interpret TF active negative interpret inactive. run decoupleR methods, need input matrix (mat), input prior knowledge network/resource (net), name columns net want use.","code":"# Extract the normalized log-transformed counts mat <- as.matrix(data@assays$RNA@data)  # Run ulm acts <- run_ulm(mat=mat, net=net, .source='source', .target='target',                 .mor='mor', minsize = 5) acts #> # A tibble: 80,640 × 5 #>    statistic source condition         score p_value #>    <chr>     <chr>  <chr>             <dbl>   <dbl> #>  1 ulm       ABL1   AAACATACAACCAC-1  2.64  0.00820 #>  2 ulm       ABL1   AAACGCTGTTTCTG-1  0.893 0.372   #>  3 ulm       ABL1   AACCTTTGGACGGA-1  2.79  0.00525 #>  4 ulm       ABL1   AACGCCCTCGTACA-1  1.80  0.0721  #>  5 ulm       ABL1   AACGTCGAGTATCG-1  1.63  0.104   #>  6 ulm       ABL1   AACTCACTCAAGCT-1  1.71  0.0871  #>  7 ulm       ABL1   AAGATGGAAAACAG-1  1.12  0.264   #>  8 ulm       ABL1   AAGATTACCGCCTT-1  2.43  0.0151  #>  9 ulm       ABL1   AAGCCATGAACTGC-1  1.62  0.105   #> 10 ulm       ABL1   AAGGTCTGCAGATC-1 -0.292 0.771   #> # ℹ 80,630 more rows"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_sc.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Transcription factor activity inference from scRNA-seq","text":"obtained results, store object new assay called tfsulm: new assay can used plot activities. observe activity inferred PAX5 across cells, particulary active B cells. Interestingly, PAX5 known TF crucial B cell identity function. inference activities “foot-prints” target genes informative just looking molecular readouts given TF, example gene expression PAX5, informative :","code":"# Extract ulm and store it in tfsulm in pbmc data[['tfsulm']] <- acts %>%   pivot_wider(id_cols = 'source', names_from = 'condition',               values_from = 'score') %>%   column_to_rownames('source') %>%   Seurat::CreateAssayObject(.)  # Change assay DefaultAssay(object = data) <- \"tfsulm\"  # Scale the data data <- ScaleData(data) data@assays$tfsulm@data <- data@assays$tfsulm@scale.data p1 <- DimPlot(data, reduction = \"umap\", label = TRUE, pt.size = 0.5) +    NoLegend() + ggtitle('Cell types') p2 <- (FeaturePlot(data, features = c(\"PAX5\")) &    scale_colour_gradient2(low = 'blue', mid = 'white', high = 'red')) +   ggtitle('PAX5 activity') DefaultAssay(object = data) <- \"RNA\" p3 <- FeaturePlot(data, features = c(\"PAX5\")) + ggtitle('PAX5 expression') DefaultAssay(object = data) <- \"tfsulm\" p1 | p2 | p3"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_sc.html","id":"exploration","dir":"Articles","previous_headings":"","what":"Exploration","title":"Transcription factor activity inference from scRNA-seq","text":"can also see mean activity per group top 20 variable TFs:  can observe known marker TFs appearing, EBF1 B cells RFX5 myeloid lineage EOMES lymphoid.","code":"n_tfs <- 25 # Extract activities from object as a long dataframe df <- t(as.matrix(data@assays$tfsulm@data)) %>%   as.data.frame() %>%   mutate(cluster = Idents(data)) %>%   pivot_longer(cols = -cluster, names_to = \"source\", values_to = \"score\") %>%   group_by(cluster, source) %>%   summarise(mean = mean(score))  # Get top tfs with more variable means across clusters tfs <- df %>%   group_by(source) %>%   summarise(std = sd(mean)) %>%   arrange(-abs(std)) %>%   head(n_tfs) %>%   pull(source)  # Subset long data frame to top tfs and transform to wide matrix top_acts_mat <- df %>%   filter(source %in% tfs) %>%   pivot_wider(id_cols = 'cluster', names_from = 'source',               values_from = 'mean') %>%   column_to_rownames('cluster') %>%   as.matrix()  # Choose color palette palette_length = 100 my_color = colorRampPalette(c(\"Darkblue\", \"white\",\"red\"))(palette_length)  my_breaks <- c(seq(-3, 0, length.out=ceiling(palette_length/2) + 1),                seq(0.05, 3, length.out=floor(palette_length/2)))  # Plot pheatmap(top_acts_mat, border_color = NA, color=my_color, breaks = my_breaks)"},{"path":"https://saezlab.github.io/decoupleR/articles/tf_sc.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Transcription factor activity inference from scRNA-seq","text":"","code":"#> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.1 (2023-06-16) #>  os       Ubuntu 22.04.3 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  en_US.UTF-8 #>  ctype    en_US.UTF-8 #>  tz       UTC #>  date     2024-03-24 #>  pandoc   3.1.1 @ /usr/local/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package          * version date (UTC) lib source #>  abind              1.4-5   2016-07-21 [1] RSPM #>  backports          1.4.1   2021-12-13 [1] RSPM #>  BiocManager        1.30.22 2023-08-08 [1] RSPM #>  BiocParallel       1.36.0  2023-10-24 [1] Bioconductor #>  BiocStyle        * 2.30.0  2023-10-24 [1] Bioconductor #>  bit                4.0.5   2022-11-15 [1] RSPM #>  bit64              4.0.5   2020-08-30 [1] RSPM #>  bookdown           0.36    2023-10-16 [1] RSPM #>  bslib              0.5.1   2023-08-11 [1] RSPM #>  cachem             1.0.8   2023-05-01 [1] RSPM #>  cellranger         1.1.0   2016-07-27 [1] RSPM #>  checkmate          2.3.0   2023-10-25 [1] RSPM #>  cli                3.6.1   2023-03-23 [1] RSPM #>  cluster            2.1.4   2022-08-22 [2] CRAN (R 4.3.1) #>  codetools          0.2-19  2023-02-01 [2] CRAN (R 4.3.1) #>  colorspace         2.1-0   2023-01-23 [1] RSPM #>  cowplot            1.1.1   2020-12-30 [1] RSPM #>  crayon             1.5.2   2022-09-29 [1] RSPM #>  curl               5.1.0   2023-10-02 [1] RSPM #>  data.table         1.14.8  2023-02-17 [1] RSPM #>  decoupleR        * 2.9.6   2024-03-24 [1] Bioconductor #>  deldir             1.0-9   2023-05-17 [1] RSPM #>  desc               1.4.2   2022-09-08 [1] RSPM #>  digest             0.6.33  2023-07-07 [1] RSPM #>  dotCall64          1.1-0   2023-10-17 [1] RSPM #>  dplyr            * 1.1.3   2023-09-03 [1] RSPM #>  ellipsis           0.3.2   2021-04-29 [1] RSPM #>  evaluate           0.22    2023-09-29 [1] RSPM #>  fansi              1.0.5   2023-10-08 [1] RSPM #>  farver             2.1.1   2022-07-06 [1] RSPM #>  fastDummies        1.7.3   2023-07-06 [1] RSPM (R 4.3.0) #>  fastmap            1.1.1   2023-02-24 [1] RSPM #>  fitdistrplus       1.1-11  2023-04-25 [1] RSPM #>  fs                 1.6.3   2023-07-20 [1] RSPM #>  future             1.33.0  2023-07-01 [1] RSPM #>  future.apply       1.11.0  2023-05-21 [1] RSPM #>  generics           0.1.3   2022-07-05 [1] RSPM #>  ggplot2          * 3.4.4   2023-10-12 [1] RSPM #>  ggrepel            0.9.4   2023-10-13 [1] RSPM #>  ggridges           0.5.4   2022-09-26 [1] RSPM #>  globals            0.16.2  2022-11-21 [1] RSPM #>  glue               1.6.2   2022-02-24 [1] RSPM #>  goftest            1.2-3   2021-10-07 [1] RSPM #>  gridExtra          2.3     2017-09-09 [1] RSPM #>  gtable             0.3.4   2023-08-21 [1] RSPM #>  hms                1.1.3   2023-03-21 [1] RSPM #>  htmltools          0.5.6.1 2023-10-06 [1] RSPM #>  htmlwidgets        1.6.2   2023-03-17 [1] RSPM #>  httpuv             1.6.12  2023-10-23 [1] RSPM #>  httr               1.4.7   2023-08-15 [1] RSPM #>  ica                1.0-3   2022-07-08 [1] RSPM #>  igraph             1.5.1   2023-08-10 [1] RSPM #>  irlba              2.3.5.1 2022-10-03 [1] RSPM #>  jquerylib          0.1.4   2021-04-26 [1] RSPM #>  jsonlite           1.8.7   2023-06-29 [1] RSPM #>  KernSmooth         2.23-22 2023-07-10 [1] RSPM #>  knitr              1.44    2023-09-11 [1] RSPM #>  labeling           0.4.3   2023-08-29 [1] RSPM #>  later              1.3.1   2023-05-02 [1] RSPM #>  lattice            0.22-5  2023-10-24 [1] RSPM #>  lazyeval           0.2.2   2019-03-15 [1] RSPM #>  leiden             0.4.3   2022-09-10 [1] RSPM #>  lifecycle          1.0.3   2022-10-07 [1] RSPM #>  listenv            0.9.0   2022-12-16 [1] RSPM #>  lmtest             0.9-40  2022-03-21 [1] RSPM #>  logger             0.2.2   2021-10-19 [1] RSPM #>  lubridate          1.9.3   2023-09-27 [1] RSPM #>  magrittr           2.0.3   2022-03-30 [1] RSPM #>  MASS               7.3-60  2023-05-04 [2] CRAN (R 4.3.1) #>  Matrix             1.6-1.1 2023-09-18 [1] RSPM #>  matrixStats        1.1.0   2023-11-07 [1] RSPM (R 4.3.0) #>  memoise            2.0.1   2021-11-26 [1] RSPM #>  mime               0.12    2021-09-28 [1] RSPM #>  miniUI             0.1.1.1 2018-05-18 [1] RSPM #>  munsell            0.5.0   2018-06-12 [1] RSPM #>  nlme               3.1-163 2023-08-09 [1] RSPM #>  OmnipathR          3.10.1  2023-10-25 [1] Bioconductor #>  parallelly         1.36.0  2023-05-26 [1] RSPM #>  patchwork        * 1.1.3   2023-08-14 [1] RSPM #>  pbapply            1.7-2   2023-06-27 [1] RSPM #>  pheatmap         * 1.0.12  2019-01-04 [1] RSPM #>  pillar             1.9.0   2023-03-22 [1] RSPM #>  pkgconfig          2.0.3   2019-09-22 [1] RSPM #>  pkgdown            2.0.7   2022-12-14 [1] RSPM #>  plotly             4.10.3  2023-10-21 [1] RSPM #>  plyr               1.8.9   2023-10-02 [1] RSPM #>  png                0.1-8   2022-11-29 [1] RSPM #>  polyclip           1.10-6  2023-09-27 [1] RSPM #>  prettyunits        1.2.0   2023-09-24 [1] RSPM #>  progress           1.2.2   2019-05-16 [1] RSPM #>  progressr          0.14.0  2023-08-10 [1] RSPM #>  promises           1.2.1   2023-08-10 [1] RSPM #>  purrr              1.0.2   2023-08-10 [1] RSPM #>  R6                 2.5.1   2021-08-19 [1] RSPM #>  ragg               1.2.6   2023-10-10 [1] RSPM #>  RANN               2.6.1   2019-01-08 [1] RSPM #>  rappdirs           0.3.3   2021-01-31 [1] RSPM #>  RColorBrewer       1.1-3   2022-04-03 [1] RSPM #>  Rcpp               1.0.11  2023-07-06 [1] RSPM #>  RcppAnnoy          0.0.21  2023-07-02 [1] RSPM #>  RcppHNSW           0.5.0   2023-09-19 [1] RSPM (R 4.3.0) #>  readr              2.1.4   2023-02-10 [1] RSPM #>  readxl             1.4.3   2023-07-06 [1] RSPM #>  reshape2           1.4.4   2020-04-09 [1] RSPM #>  reticulate         1.34.0  2023-10-12 [1] RSPM #>  rlang              1.1.1   2023-04-28 [1] RSPM #>  rmarkdown          2.25    2023-09-18 [1] RSPM #>  ROCR               1.0-11  2020-05-02 [1] RSPM #>  rprojroot          2.0.3   2022-04-02 [1] RSPM #>  RSpectra           0.16-1  2022-04-24 [1] RSPM (R 4.3.0) #>  Rtsne              0.16    2022-04-17 [1] RSPM #>  rvest              1.0.3   2022-08-19 [1] RSPM #>  sass               0.4.7   2023-07-15 [1] RSPM #>  scales             1.2.1   2022-08-20 [1] RSPM #>  scattermore        1.2     2023-06-12 [1] RSPM #>  sctransform        0.4.1   2023-10-19 [1] RSPM #>  selectr            0.4-2   2019-11-20 [1] RSPM #>  sessioninfo        1.2.2   2021-12-06 [1] RSPM #>  Seurat           * 5.0.0   2023-11-04 [1] RSPM (R 4.3.0) #>  SeuratObject     * 5.0.0   2023-10-26 [1] RSPM #>  shiny              1.7.5.1 2023-10-14 [1] RSPM #>  sp               * 2.1-1   2023-10-16 [1] RSPM #>  spam               2.10-0  2023-10-23 [1] RSPM #>  spatstat.data      3.0-3   2023-10-24 [1] RSPM #>  spatstat.explore   3.2-5   2023-10-22 [1] RSPM #>  spatstat.geom      3.2-7   2023-10-20 [1] RSPM #>  spatstat.random    3.2-1   2023-10-21 [1] RSPM #>  spatstat.sparse    3.0-3   2023-10-24 [1] RSPM #>  spatstat.utils     3.0-4   2023-10-24 [1] RSPM #>  stringi            1.7.12  2023-01-11 [1] RSPM #>  stringr            1.5.0   2022-12-02 [1] RSPM #>  survival           3.5-7   2023-08-14 [1] RSPM #>  systemfonts        1.0.5   2023-10-09 [1] RSPM #>  tensor             1.5     2012-05-05 [1] RSPM #>  textshaping        0.3.7   2023-10-09 [1] RSPM #>  tibble           * 3.2.1   2023-03-20 [1] RSPM #>  tidyr            * 1.3.0   2023-01-24 [1] RSPM #>  tidyselect         1.2.0   2022-10-10 [1] RSPM #>  timechange         0.2.0   2023-01-11 [1] RSPM #>  tzdb               0.4.0   2023-05-12 [1] RSPM #>  utf8               1.2.4   2023-10-22 [1] RSPM #>  uwot               0.1.16  2023-06-29 [1] RSPM #>  vctrs              0.6.4   2023-10-12 [1] RSPM #>  viridisLite        0.4.2   2023-05-02 [1] RSPM #>  vroom              1.6.4   2023-10-02 [1] RSPM #>  withr              2.5.1   2023-09-26 [1] RSPM #>  xfun               0.40    2023-08-09 [1] RSPM #>  xml2               1.3.5   2023-07-06 [1] RSPM #>  xtable             1.8-4   2019-04-21 [1] RSPM #>  yaml               2.3.7   2023-01-23 [1] RSPM #>  zoo                1.8-12  2023-04-13 [1] RSPM #>  #>  [1] /usr/local/lib/R/site-library #>  [2] /usr/local/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://saezlab.github.io/decoupleR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pau Badia--Mompel. Author, maintainer. Jesús Vélez-Santiago. Author. Jana Braunger. Author. Celina Geiss. Author. Daniel Dimitrov. Author. Sophia Müller-Dott. Author. Petr Taus. Author. Aurélien Dugourd. Author. Christian H. Holland. Author. Ricardo O. Ramirez Flores. Author. Julio Saez-Rodriguez. Author.","code":""},{"path":"https://saezlab.github.io/decoupleR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Badia--Mompel P., Vélez Santiago J., Braunger J., Geiss C., Dimitrov    D., Müller-Dott S., Taus P., Dugourd ., Holland C.H., Ramirez Flores R.O.    Saez-Rodriguez J. 2022. decoupleR: Ensemble computational methods    infer biological activities omics data. Bioinformatics Advances.   https://doi.org/10.1093/bioadv/vbac016","code":"@Article{,   author = {Pau Badia-i-Mompel and Jesús Vélez Santiago and Jana Braunger and Celina Geiss and Daniel Dimitrov and Sophia Müller-Dott and Petr Taus and Aurelien Dugourd and Christian H. Holland and Ricardo O. Ramirez Flores and Julio Saez-Rodriguez},   title = {decoupleR: ensemble of computational methods to infer biological activities from omics data},   journal = {Bioinformatics Advances},   year = {2022},   doi = {https://doi.org/10.1093/bioadv/vbac016}, }"},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"decoupleR: Ensemble of computational methods to infer biological activities from omics data","text":"many methods allow us extract biological activities omics data. decoupleR Bioconductor package containing different statistical methods extract biological signatures prior knowledge within unified framework. Additionally, incorporates methods take account sign weight network interactions. decoupleR can used omic, long features can linked biological process based prior knowledge. example, transcriptomics gene sets regulated transcription factor, phospho-proteomics phosphosites targeted kinase. R version, faster memory efficient Python implementation go .  information package used real data, please check following links: decoupleR’s general usage Pathway activity inference bulk RNA-seq Pathway activity inference scRNA-seq Transcription factor activity inference bulk RNA-seq Transcription factor activity inference scRNA-seq Example Kinase TF activity estimation decoupleR’s manuscript repository Python implementation","code":""},{"path":"https://saezlab.github.io/decoupleR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"decoupleR: Ensemble of computational methods to infer biological activities from omics data","text":"decoupleR R package distributed part Bioconductor project. install package, start R enter: Alternatively, find error, try install latest version GitHub:","code":"install.packages('BiocManager') BiocManager::install('saezlab/decoupleR') install.packages('remotes') remotes::install_github('saezlab/decoupleR')"},{"path":"https://saezlab.github.io/decoupleR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"decoupleR: Ensemble of computational methods to infer biological activities from omics data","text":"Footprint methods inside decoupleR can used academic commercial purposes, except viper holds non-commercial license. data redistributed OmniPath license, original resource carries . one can find license information resources OmniPath.","code":""},{"path":"https://saezlab.github.io/decoupleR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"decoupleR: Ensemble of computational methods to infer biological activities from omics data","text":"Badia--Mompel P., Vélez Santiago J., Braunger J., Geiss C., Dimitrov D., Müller-Dott S., Taus P., Dugourd ., Holland C.H., Ramirez Flores R.O. Saez-Rodriguez J. 2022. decoupleR: ensemble computational methods infer biological activities omics data. Bioinformatics Advances. https://doi.org/10.1093/bioadv/vbac016","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/check_corr.html","id":null,"dir":"Reference","previous_headings":"","what":"Check correlation (colinearity) — check_corr","title":"Check correlation (colinearity) — check_corr","text":"Checks correlation across regulators network.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/check_corr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check correlation (colinearity) — check_corr","text":"","code":"check_corr(   network,   .source = \"source\",   .target = \"target\",   .mor = \"mor\",   .likelihood = NULL )"},{"path":"https://saezlab.github.io/decoupleR/reference/check_corr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check correlation (colinearity) — check_corr","text":"network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. .mor Column edge mode regulation (.e. mor). .likelihood Deprecated argument. Now always set 1.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/check_corr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check correlation (colinearity) — check_corr","text":"Correlation pairs tibble.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/check_corr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check correlation (colinearity) — check_corr","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\") net <- readRDS(file.path(inputs_dir, \"net.rds\")) check_corr(net, .source='source') #> # A tibble: 3 × 3 #>   source source.2 correlation #>   <chr>  <chr>          <dbl> #> 1 T1     T3             0.364 #> 2 T2     T3            -0.487 #> 3 T1     T2            -0.688"},{"path":"https://saezlab.github.io/decoupleR/reference/convert_f_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns and add defaults values if column not present — convert_f_defaults","title":"Rename columns and add defaults values if column not present — convert_f_defaults","text":"convert_f_defaults() combine dplyr::rename() way working tibble::add_column() add columns default values case exist renaming data.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/convert_f_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns and add defaults values if column not present — convert_f_defaults","text":"","code":"convert_f_defaults(.data, ..., .def_col_val = c(), .use_dots = TRUE)"},{"path":"https://saezlab.github.io/decoupleR/reference/convert_f_defaults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns and add defaults values if column not present — convert_f_defaults","text":".data data frame, data frame extension (e.g. tibble), lazy data frame (e.g. dbplyr dtplyr). See Methods, , details. ... rename(): <tidy-select> Use new_name = old_name rename selected variables. rename_with(): additional arguments passed onto .fn. .def_col_val Named vector columns default values none exist rename. .use_dots dot prefix added renamed variables? allow swapping columns.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/convert_f_defaults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns and add defaults values if column not present — convert_f_defaults","text":"object type .data. output following properties: Rows affected. Column names changed. Column order function call.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/convert_f_defaults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename columns and add defaults values if column not present — convert_f_defaults","text":"objective using .use_dots able swap columns , default, allowed dplyr::rename() function. behavior can replicated simply using dplyr::select(), however, select evaluation allows much flexibility unexpected results obtained. Despite , future implementation consider form execution allow renaming column multiple ones (.e. extend dataframe extension).","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/convert_f_defaults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename columns and add defaults values if column not present — convert_f_defaults","text":"","code":"df <- tibble::tibble(x = 1, y = 2, z = 3)  # Rename columns df <- tibble::tibble(x = 1, y = 2) convert_f_defaults(     .data = df,     new_x = x,     new_y = y,     new_z = NULL,     .def_col_val = c(new_z = 3) ) #> # A tibble: 1 × 3 #>   new_x new_y new_z #>   <dbl> <dbl> <dbl> #> 1     1     2     3"},{"path":"https://saezlab.github.io/decoupleR/reference/decouple.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate multiple statistics with same input data — decouple","title":"Evaluate multiple statistics with same input data — decouple","text":"Calculate source activity per sample gene expression matrix coupling regulatory network variety statistics.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/decouple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate multiple statistics with same input data — decouple","text":"","code":"decouple(   mat,   network,   .source = source,   .target = target,   statistics = NULL,   args = list(NULL),   consensus_score = TRUE,   consensus_stats = NULL,   include_time = FALSE,   show_toy_call = FALSE,   minsize = 5 )"},{"path":"https://saezlab.github.io/decoupleR/reference/decouple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate multiple statistics with same input data — decouple","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. statistics Statistical methods run sequentially. none provided, top performer methods run (mlm, ulm wsum). args list argument-lists length statistics (length 1). default argument, list(NULL), recycled length statistics, call function arguments (apart mat, network, .source , .target). consensus_score Boolean whether run consensus score methods. consensus_stats List estimate names use calculation consensus score. used filter extra estimations methods, example wsum returns wsum, corr_wsum norm_wsum. none provided, also statstics provided, top performer methods used (mlm, ulm norm_wsum). Else, use available estimates running methods statistics argument. include_time time per statistic evaluated informed? show_toy_call call statistic must informed? minsize Integer indicating minimum number targets per source.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/decouple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate multiple statistics with same input data — decouple","text":"long format tibble enrichment scores source across samples. Resulting tibble contains following columns: run_id: Indicates order methods executed. statistic: Indicates method associated score. source: Source nodes network. condition: Condition representing column mat. score: Regulatory activity (enrichment score). statistic_time: requested, internal execution time indicator. p_value: p-value (available) obtained score.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/decouple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate multiple statistics with same input data — decouple","text":"","code":"if (FALSE) {     inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\")      mat <- readRDS(file.path(inputs_dir, \"mat.rds\"))     net <- readRDS(file.path(inputs_dir, \"net.rds\"))      decouple(         mat = mat,         network = net,         .source = \"source\",         .target = \"target\",         statistics = c(\"gsva\", \"wmean\", \"wsum\", \"ulm\", \"aucell\"),         args = list(             gsva = list(verbose = FALSE),             wmean = list(.mor = \"mor\", .likelihood = \"likelihood\"),             wsum = list(.mor = \"mor\"),             ulm = list(.mor = \"mor\")         ),         minsize = 0     ) }"},{"path":"https://saezlab.github.io/decoupleR/reference/decoupleR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"decoupleR: decoupleR: Ensemble of computational methods to infer biological activities from omics data — decoupleR-package","title":"decoupleR: decoupleR: Ensemble of computational methods to infer biological activities from omics data — decoupleR-package","text":"Many methods allow us extract biological activities omics data using information prior knowledge resources, reducing dimensionality increased statistical power better interpretability. , present decoupleR, Bioconductor package containing different statistical methods extract signatures within unified framework. decoupleR allows user flexibly test method resource. incorporates methods take account sign weight network interactions. decoupleR can used omic, long features can linked biological process based prior knowledge. example, transcriptomics gene sets regulated transcription factor, phospho-proteomics phosphosites targeted kinase.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/decoupleR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"decoupleR: decoupleR: Ensemble of computational methods to infer biological activities from omics data — decoupleR-package","text":"Maintainer: Pau Badia--Mompel pau.badia@uni-heidelberg.de (ORCID) Authors: Jesús Vélez-Santiago jvelezmagic@gmail.com (ORCID) Jana Braunger jana.bc@gmx.de (ORCID) Celina Geiss celina.geiss@stud.uni-heidelberg.de (ORCID) Daniel Dimitrov daniel.dimitrov@uni-heidelberg.de (ORCID) Sophia Müller-Dott sophia.mueller-dott@uni-heidelberg.de (ORCID) Petr Taus petr.taus@ceitec.muni.cz (ORCID) Aurélien Dugourd aurelien.dugourd@bioquant.uni-heidelberg.de (ORCID) Christian H. Holland cholland2408@gmail.com (ORCID) Ricardo O. Ramirez Flores roramirezf@uni-heidelberg.de  (ORCID) Julio Saez-Rodriguez pub.saez@uni-heidelberg.de (ORCID)","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/dot-decoupler_mat_format.html","id":null,"dir":"Reference","previous_headings":"","what":"DecoupleR mat format — .decoupler_mat_format","title":"DecoupleR mat format — .decoupler_mat_format","text":"DecoupleR mat format","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/dot-decoupler_mat_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DecoupleR mat format — .decoupler_mat_format","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/dot-decoupler_network_format.html","id":null,"dir":"Reference","previous_headings":"","what":"DecoupleR network format — .decoupler_network_format","title":"DecoupleR network format — .decoupler_network_format","text":"network passed run_ method package must contain least two attributes: .source .target. addition, methods must map corresponding metadata associated edges.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/dot-decoupler_network_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DecoupleR network format — .decoupler_network_format","text":"network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. .mor Column edge mode regulation (.e. mor). .likelihood Deprecated argument. Now always set 1.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/dot-decoupler_network_format.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DecoupleR network format — .decoupler_network_format","text":"attributes mapped prefixed . idea using type mapping provide flexibility different types networks, regulatory, metabolic, type. way, consider network networks long format can easily manipulated functions within tidyverse ecosystem.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/dot-fit_preprocessing.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-processing for methods that fit networks. — .fit_preprocessing","title":"Pre-processing for methods that fit networks. — .fit_preprocessing","text":"center true, expression values centered mean expression across samples.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/dot-fit_preprocessing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-processing for methods that fit networks. — .fit_preprocessing","text":"","code":".fit_preprocessing(network, mat, center, na.rm, sparse)"},{"path":"https://saezlab.github.io/decoupleR/reference/dot-fit_preprocessing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-processing for methods that fit networks. — .fit_preprocessing","text":"network Tibble dataframe edges associated metadata. mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. center Logical value indicating mat must centered base::rowMeans(). na.rm missing values (including NaN) omitted calculations base::rowMeans()? sparse Deprecated parameter.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/dot-fit_preprocessing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-processing for methods that fit networks. — .fit_preprocessing","text":"named list matrices evaluate methods fit models, like .mlm_analysis(). mat: Features rows samples columns. mor_mat: Features rows columns source.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/dot-fit_preprocessing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre-processing for methods that fit networks. — .fit_preprocessing","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\") mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\")) net <- rename_net(net, source, target, mor) .fit_preprocessing(net, mat, center = FALSE, na.rm = FALSE, sparse = FALSE) #> $mat #>            S01       S02       S03        S04        S05        S06        S07 #> G01 9.37095845 9.3888607 9.8951935  8.7844590 8.43144620 8.36723464 8.62351816 #> G02 8.56469817 8.2787888 8.4304691  8.8509076 8.65564788 8.18523056 8.95352336 #> G03 8.36312841 8.1333213 8.2572694 10.4142076 8.32192527 8.58182373 8.54282881 #> G04 8.63286260 8.6359504 9.7631631  8.0361226 8.78383894 9.39973683 8.58099650 #> G05 0.40426832 0.2842529 0.4600974  0.2059986 1.57572752 0.72729206 0.76817874 #> G06 0.10612452 2.6564554 0.6399949  0.3610573 0.64289931 1.30254263 0.46376759 #> G07 1.51152200 2.4404669 0.4554501  0.7581632 0.08976065 0.33584812 0.88577630 #> G08 0.09465904 1.3201133 0.7048373  0.7267048 0.27655075 1.03850610 1.09978090 #> G09 2.01842371 0.3066386 1.0351035  1.3682810 0.67928882 0.92072857 1.51270701 #> G10 0.06271410 1.7813084 0.6089264  0.4328180 0.08983289 0.72087816 0.25792144 #> G11 1.30486965 0.1719174 0.5049551  0.8113932 2.99309008 1.04311894 0.08844023 #> G12 2.28664539 1.2146747 1.7170087  1.4441013 0.28488295 0.09018639 0.12089654 #>           S08       S09       S10         S11        S12       S13         S14 #> G01 9.1943289 9.1317387 8.1881930 9.493625067 8.00006288 0.4138688 0.007762034 #> G02 8.6119969 9.4592140 8.1191610 9.470435741 9.12288964 1.1133860 0.800282178 #> G03 8.2171398 8.0799826 8.0250926 8.124702386 9.43985574 0.4809928 0.533492330 #> G04 8.1827567 8.6532043 8.1080727 8.996639135 9.09711377 0.4331690 1.287675246 #> G05 0.9333463 1.2009654 0.4854352 0.001822614 0.11731956 8.6968626 8.175525870 #> G06 0.8217731 1.0447511 0.5042171 0.428258881 1.20149840 9.0563684 9.071782384 #> G07 1.3921164 1.0032086 1.6610991 0.613671606 0.46972958 8.0406985 8.163206882 #> G08 0.4761739 1.8484819 0.3823337 2.024677845 0.05246948 9.5515448 8.362738416 #> G09 0.6503486 0.6667734 0.5126503 1.224747950 0.08610730 1.1671695 0.590013548 #> G10 1.3911105 0.1055138 2.7018910 0.179516441 0.88767902 0.2736457 1.432421928 #> G11 1.1107889 0.4222559 1.3621162 0.567620594 0.44468400 0.4678453 0.992692511 #> G12 0.8607926 0.1223502 0.1372562 0.492877354 0.02944488 1.2382523 0.454650298 #>             S15       S16       S17         S18       S19       S20         S21 #> G01 0.084898059 0.1514559 0.2526117  1.37686160 0.1320880 0.6585034  0.72921728 #> G02 0.895565582 0.5841090 1.2940025  1.15085557 1.4767874 1.2502366  0.99806891 #> G03 0.229778139 0.3688067 0.9591704  0.70582139 0.2170302 0.2717637  1.25848166 #> G04 0.836619068 0.2946543 1.0857749  1.05405578 1.2836022 0.9479520  1.24886369 #> G05 9.745055861 8.2792594 8.4037749  8.64574372 8.3856679 9.2015824  9.38063705 #> G06 9.689458921 9.3362367 8.5864875  8.18537797 8.3515129 8.4661161 10.04996069 #> G07 8.864777979 8.7007488 9.8152284  9.20122205 8.5217961 8.2693514  9.01687283 #> G08 8.150775989 8.5541966 8.1288214 10.03697217 9.0681312 8.3909654  8.02671746 #> G09 1.449007130 0.8363066 2.0009292  0.10777474 0.4283659 1.3487070  0.70360778 #> G10 0.643008700 1.5945882 0.3337772  0.08410810 0.1740182 0.0227647  0.97138523 #> G11 0.483193864 0.2049586 1.1713251  0.49561964 0.5156677 0.2442259  1.09615624 #> G12 0.006355626 0.3450880 2.0595392  0.03741519 0.2343653 0.9423717  0.04905045 #>           S22         S23        S24 #> G01 1.1984959  0.05399674 0.47039340 #> G02 0.1900190  1.06477321 1.24267027 #> G03 1.2977059  0.81319504 1.38157546 #> G04 1.0338737  0.19081647 1.20445894 #> G05 8.7384408 10.69992981 8.82407396 #> G06 8.0465639  8.06096664 9.66262940 #> G07 9.0175961  8.57375170 8.56930634 #> G08 8.3832840  8.04580358 8.63551382 #> G09 0.8727554  0.15741254 0.04372201 #> G10 0.9695450  0.43156537 0.34801230 #> G11 0.3838467  0.39654974 2.45959355 #> G12 1.8515557  1.30997823 0.81838032 #>  #> $mor_mat #>      T1  T2   T3 #> G01 1.0 0.0  0.0 #> G02 1.0 0.0  0.0 #> G03 0.7 0.0  0.0 #> G04 0.0 0.0  0.0 #> G05 0.0 0.0  0.0 #> G06 0.0 1.0 -0.5 #> G07 0.0 0.5 -3.0 #> G08 0.0 1.0 -1.0 #> G09 0.0 0.0  0.0 #> G10 0.0 0.0  0.0 #> G11 0.0 0.0  1.0 #> G12 0.0 0.0  0.0 #>"},{"path":"https://saezlab.github.io/decoupleR/reference/extract_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract sets — extract_sets","title":"Extract sets — extract_sets","text":"Extracts feature sets renamed network (see rename_net).","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/extract_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract sets — extract_sets","text":"","code":"extract_sets(network)"},{"path":"https://saezlab.github.io/decoupleR/reference/extract_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract sets — extract_sets","text":"network Tibble dataframe edges associated metadata.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/extract_sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract sets — extract_sets","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\") mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\")) net <- rename_net(net, source, target, mor) extract_sets(net) #> $T1 #> [1] \"G01\" \"G02\" \"G03\" #>  #> $T2 #> [1] \"G06\" \"G07\" \"G08\" #>  #> $T3 #> [1] \"G06\" \"G07\" \"G08\" \"G11\" #>"},{"path":"https://saezlab.github.io/decoupleR/reference/filt_minsize.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter sources with minsize targets — filt_minsize","title":"Filter sources with minsize targets — filt_minsize","text":"Filter sources net less minsize targets","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/filt_minsize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter sources with minsize targets — filt_minsize","text":"","code":"filt_minsize(mat_f_names, network, minsize = 5)"},{"path":"https://saezlab.github.io/decoupleR/reference/filt_minsize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter sources with minsize targets — filt_minsize","text":"mat_f_names Feature names mat. network Tibble dataframe edges associated metadata. minsize Integer indicating minimum number targets per source.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/filt_minsize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter sources with minsize targets — filt_minsize","text":"Filtered network.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/filt_minsize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter sources with minsize targets — filt_minsize","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\") mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\")) net <- rename_net(net, source, target, mor) filt_minsize(rownames(mat), net, minsize = 4) #> # A tibble: 4 × 4 #>   source target   mor likelihood #>   <chr>  <chr>  <dbl>      <dbl> #> 1 T3     G06     -0.5          1 #> 2 T3     G07     -3            1 #> 3 T3     G08     -1            1 #> 4 T3     G11      1            1"},{"path":"https://saezlab.github.io/decoupleR/reference/get_collectri.html","id":null,"dir":"Reference","previous_headings":"","what":"CollecTRI gene regulatory network.\nWrapper to access CollecTRI gene regulatory network. CollecTRI is a\ncomprehensive resource containing a curated collection of transcription\nfactors (TFs) and their target genes. It is an expansion of DoRothEA.\nEach interaction is weighted by its mode of regulation (either positive or negative). — get_collectri","title":"CollecTRI gene regulatory network.\nWrapper to access CollecTRI gene regulatory network. CollecTRI is a\ncomprehensive resource containing a curated collection of transcription\nfactors (TFs) and their target genes. It is an expansion of DoRothEA.\nEach interaction is weighted by its mode of regulation (either positive or negative). — get_collectri","text":"CollecTRI gene regulatory network. Wrapper access CollecTRI gene regulatory network. CollecTRI comprehensive resource containing curated collection transcription factors (TFs) target genes. expansion DoRothEA. interaction weighted mode regulation (either positive negative).","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_collectri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CollecTRI gene regulatory network.\nWrapper to access CollecTRI gene regulatory network. CollecTRI is a\ncomprehensive resource containing a curated collection of transcription\nfactors (TFs) and their target genes. It is an expansion of DoRothEA.\nEach interaction is weighted by its mode of regulation (either positive or negative). — get_collectri","text":"","code":"get_collectri(organism = \"human\", split_complexes = FALSE, ...)"},{"path":"https://saezlab.github.io/decoupleR/reference/get_collectri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CollecTRI gene regulatory network.\nWrapper to access CollecTRI gene regulatory network. CollecTRI is a\ncomprehensive resource containing a curated collection of transcription\nfactors (TFs) and their target genes. It is an expansion of DoRothEA.\nEach interaction is weighted by its mode of regulation (either positive or negative). — get_collectri","text":"organism organism use. human, mouse rat available. split_complexes Whether split complexes subunits. default complexes kept . ... Ignored.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_collectri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CollecTRI gene regulatory network.\nWrapper to access CollecTRI gene regulatory network. CollecTRI is a\ncomprehensive resource containing a curated collection of transcription\nfactors (TFs) and their target genes. It is an expansion of DoRothEA.\nEach interaction is weighted by its mode of regulation (either positive or negative). — get_collectri","text":"","code":"collectri <- get_collectri(organism='human', split_complexes=FALSE)"},{"path":"https://saezlab.github.io/decoupleR/reference/get_dorothea.html","id":null,"dir":"Reference","previous_headings":"","what":"DoRothEA gene regulatory network. — get_dorothea","title":"DoRothEA gene regulatory network. — get_dorothea","text":"Wrapper access DoRothEA gene regulatory network. DoRothEA comprehensive resource containing curated collection transcription factors (TFs) target genes. interaction weighted mode regulation (either positive negative) confidence level","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_dorothea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DoRothEA gene regulatory network. — get_dorothea","text":"","code":"get_dorothea(   organism = \"human\",   levels = c(\"A\", \"B\", \"C\"),   weight_dict = list(A = 1, B = 2, C = 3, D = 4) )"},{"path":"https://saezlab.github.io/decoupleR/reference/get_dorothea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DoRothEA gene regulatory network. — get_dorothea","text":"organism organism use. human, mouse rat available. levels List confidence levels return. Goes D, confident D less. weight_dict Dictionary values divide mode regulation (-1 1), one confidence level. Bigger values generate weights close zero.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_dorothea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DoRothEA gene regulatory network. — get_dorothea","text":"","code":"dorothea <- get_dorothea(organism='human', levels=c('A', 'B'))"},{"path":"https://saezlab.github.io/decoupleR/reference/get_ksn_omnipath.html","id":null,"dir":"Reference","previous_headings":"","what":"OmniPath kinase-substrate network — get_ksn_omnipath","title":"OmniPath kinase-substrate network — get_ksn_omnipath","text":"Retrieve ready use, curated kinase-substrate Network OmniPath database.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_ksn_omnipath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OmniPath kinase-substrate network — get_ksn_omnipath","text":"","code":"get_ksn_omnipath(...)"},{"path":"https://saezlab.github.io/decoupleR/reference/get_ksn_omnipath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"OmniPath kinase-substrate network — get_ksn_omnipath","text":"... Passed OmnipathR::import_omnipath_enzsub.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_ksn_omnipath.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"OmniPath kinase-substrate network — get_ksn_omnipath","text":"Import enzyme-PTM network OmniPath, filter anything phospho dephosphorilation. format columns use decoupleR functions.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_profile_of.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete a data frame with missing combinations of data — get_profile_of","title":"Complete a data frame with missing combinations of data — get_profile_of","text":"Turns implicit missing values explicit missing values. wrapper around expand(), dplyr::full_join() replace_na() useful completing missing combinations data.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_profile_of.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete a data frame with missing combinations of data — get_profile_of","text":"","code":"get_profile_of(data, sources, values_fill = NA)"},{"path":"https://saezlab.github.io/decoupleR/reference/get_profile_of.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete a data frame with missing combinations of data — get_profile_of","text":"data data frame. sources named vector list values expand get profile. values_fill Optionally, (scalar) value specifies value filled missing. can named list want apply different fill values different value columns.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_profile_of.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete a data frame with missing combinations of data — get_profile_of","text":"data frame expanded grid values passed sources filled specified fill argument.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/get_profile_of.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete a data frame with missing combinations of data — get_profile_of","text":"","code":"if (FALSE) { library(dplyr, warn.conflicts = FALSE) df <- tibble(     group = c(1:2, 1),     item_id = c(1:2, 2),     item_name = c(\"a\", \"b\", \"b\"),     value1 = 1:3,     value2 = 4:6 )  to_get_profile <- list(group = c(1, 2, 3), item_id = c(1, 2))  # This will add the combinations of group 3 with the id of the items df %>% get_profile_of(sources = to_get_profile)  # You can also choose to fill in missing values  # This only fill with \"Unknown\" the NA values of the column item_name df %>% get_profile_of(     sources = to_get_profile,     values_fill = list(item_name = \"Unknown\") )  # Replace all NAs with \"Unkwnon\" df %>% get_profile_of(sources = to_get_profile, values_fill = \"Unknown\") }"},{"path":"https://saezlab.github.io/decoupleR/reference/get_progeny.html","id":null,"dir":"Reference","previous_headings":"","what":"Pathway RespOnsive GENes for activity inference (PROGENy). — get_progeny","title":"Pathway RespOnsive GENes for activity inference (PROGENy). — get_progeny","text":"Wrapper access PROGENy model gene weights. pathway defined collection target genes, interaction associated p-value weight. top significant interactions per pathway returned.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_progeny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pathway RespOnsive GENes for activity inference (PROGENy). — get_progeny","text":"","code":"get_progeny(organism = \"human\", top = 500)"},{"path":"https://saezlab.github.io/decoupleR/reference/get_progeny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pathway RespOnsive GENes for activity inference (PROGENy). — get_progeny","text":"organism organism use. human mouse available. top Number genes per pathway return.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_progeny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pathway RespOnsive GENes for activity inference (PROGENy). — get_progeny","text":"","code":"progeny <- get_progeny(organism='human', top=500)"},{"path":"https://saezlab.github.io/decoupleR/reference/get_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to access resources inside Omnipath.\nThis wrapper allows to easily query different prior knowledge resources.\nTo check available resources run decoupleR::show_resources(). For more\ninformation visit the official website for Omnipath. — get_resource","title":"Wrapper to access resources inside Omnipath.\nThis wrapper allows to easily query different prior knowledge resources.\nTo check available resources run decoupleR::show_resources(). For more\ninformation visit the official website for Omnipath. — get_resource","text":"Wrapper access resources inside Omnipath. wrapper allows easily query different prior knowledge resources. check available resources run decoupleR::show_resources(). information visit official website Omnipath.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to access resources inside Omnipath.\nThis wrapper allows to easily query different prior knowledge resources.\nTo check available resources run decoupleR::show_resources(). For more\ninformation visit the official website for Omnipath. — get_resource","text":"","code":"get_resource(name, organism = \"human\", ...)"},{"path":"https://saezlab.github.io/decoupleR/reference/get_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to access resources inside Omnipath.\nThis wrapper allows to easily query different prior knowledge resources.\nTo check available resources run decoupleR::show_resources(). For more\ninformation visit the official website for Omnipath. — get_resource","text":"name Name resource query. organism Organism name NCBI Taxonomy ID. ... Passed OmnipathR::import_omnipath_annotations.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_resource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper to access resources inside Omnipath.\nThis wrapper allows to easily query different prior knowledge resources.\nTo check available resources run decoupleR::show_resources(). For more\ninformation visit the official website for Omnipath. — get_resource","text":"","code":"df <- decoupleR::get_resource('SIGNOR')"},{"path":"https://saezlab.github.io/decoupleR/reference/get_toy_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a toy mat and network. — get_toy_data","title":"Generate a toy mat and network. — get_toy_data","text":"Generate toy mat network.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_toy_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a toy mat and network. — get_toy_data","text":"","code":"get_toy_data(n_samples = 24, seed = 42)"},{"path":"https://saezlab.github.io/decoupleR/reference/get_toy_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a toy mat and network. — get_toy_data","text":"n_samples Number samples simulate. seed single value, interpreted integer, NULL random number generation.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_toy_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a toy mat and network. — get_toy_data","text":"List containing mat network.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/get_toy_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a toy mat and network. — get_toy_data","text":"","code":"data <- get_toy_data() mat <- data$mat network <- data$network"},{"path":"https://saezlab.github.io/decoupleR/reference/intersect_regulons.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersect network target features with input matrix. — intersect_regulons","title":"Intersect network target features with input matrix. — intersect_regulons","text":"Keep edges target features belong input matrix.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/intersect_regulons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersect network target features with input matrix. — intersect_regulons","text":"","code":"intersect_regulons(mat, network, .source, .target, minsize)"},{"path":"https://saezlab.github.io/decoupleR/reference/intersect_regulons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intersect network target features with input matrix. — intersect_regulons","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. minsize Minimum number targets per source allowed.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/intersect_regulons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intersect network target features with input matrix. — intersect_regulons","text":"Filtered tibble.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/intersect_regulons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intersect network target features with input matrix. — intersect_regulons","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\") mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\")) intersect_regulons(mat, net, source, target, minsize=4) #> # A tibble: 4 × 3 #> # Groups:   source [1] #>   source target   mor #>   <chr>  <chr>  <dbl> #> 1 T3     G06     -0.5 #> 2 T3     G07     -3   #> 3 T3     G08     -1   #> 4 T3     G11      1"},{"path":"https://saezlab.github.io/decoupleR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://saezlab.github.io/decoupleR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"Pipe object forward function call expression.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pipe operator — %>%","text":"","code":"c(1, 2, 3) %>% sum() #> [1] 6"},{"path":"https://saezlab.github.io/decoupleR/reference/pivot_wider_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot a data frame to wider and convert it to matrix — pivot_wider_profile","title":"Pivot a data frame to wider and convert it to matrix — pivot_wider_profile","text":"Generates kind table rows come id_cols, columns names_from values values_from.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/pivot_wider_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot a data frame to wider and convert it to matrix — pivot_wider_profile","text":"","code":"pivot_wider_profile(   data,   id_cols,   names_from,   values_from,   values_fill = NA,   to_matrix = FALSE,   to_sparse = FALSE,   ... )"},{"path":"https://saezlab.github.io/decoupleR/reference/pivot_wider_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot a data frame to wider and convert it to matrix — pivot_wider_profile","text":"data data frame pivot. id_cols <tidy-select> set columns uniquely identify observation. Typically used redundant variables, .e. variables whose values perfectly correlated existing variables. Defaults columns data except columns specified names_from values_from. tidyselect expression supplied, evaluated data removing columns specified names_from values_from. names_from, values_from <tidy-select> pair arguments describing column (columns) get name output column (names_from), column (columns) get cell values (values_from). values_from contains multiple values, value added front output column. values_fill Optionally, (scalar) value specifies value filled missing. can named list want apply different fill values different value columns. to_matrix Logical value indicating result matrix. Parameter ignored case sparse TRUE. to_sparse Logical value indicating whether resulting matrix sparse . ... Additional arguments passed methods.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/pivot_wider_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot a data frame to wider and convert it to matrix — pivot_wider_profile","text":"\"widened\" data; increasing number columns decreasing number rows.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/pivot_wider_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pivot a data frame to wider and convert it to matrix — pivot_wider_profile","text":"current state function, ensure operation, id_cols parameter single selector.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/pivot_wider_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot a data frame to wider and convert it to matrix — pivot_wider_profile","text":"","code":"if (FALSE) { df <- tibble::tibble(     tf = c(\"tf_1\", \"tf_1\", \"tf_2\", \"tf_2\"),     gene = c(\"gene_1\", \"gene_2\", \"gene_1\", \"gene_2\"),     mor = c(1, -1, 1, -1) )  # Return a tibble pivot_wider_profile(     data = df,     id_cols = tf,     names_from = gene,     values_from = mor )  # Return a matrix pivot_wider_profile(     data = df,     id_cols = tf,     names_from = gene,     values_from = mor,     to_matrix = TRUE ) # Return a sparse Matrix of class \"dgCMatrix\" pivot_wider_profile(     data = df,     id_cols = tf,     names_from = gene,     values_from = mor,     to_sparse = TRUE ) }"},{"path":"https://saezlab.github.io/decoupleR/reference/randomize_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomize matrix — randomize_matrix","title":"Randomize matrix — randomize_matrix","text":"Utility function used functions require permutations expression matrix","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/randomize_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomize matrix — randomize_matrix","text":"","code":"randomize_matrix(mat, randomize_type = c(\"rows\", \"cols_independently\"))"},{"path":"https://saezlab.github.io/decoupleR/reference/randomize_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Randomize matrix — randomize_matrix","text":"mat Matrix randomize. randomize_type randomize.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/randomize_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Randomize matrix — randomize_matrix","text":"Randomized matrix","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/randomize_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Randomize matrix — randomize_matrix","text":"","code":"if (FALSE) { mat <- matrix(seq_len(9), ncol = 3) mat  set.seed(42) randomize_matrix(mat, randomize_type = \"rows\")  set.seed(42) randomize_matrix(mat, randomize_type = \"cols_independently\") }"},{"path":"https://saezlab.github.io/decoupleR/reference/rename_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename network — rename_net","title":"Rename network — rename_net","text":"Renames given network column names: .source, .target, .mor, .mor provided, function sets default values.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/rename_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename network — rename_net","text":"","code":"rename_net(   network,   .source,   .target,   .mor = NULL,   .likelihood = NULL,   def_mor = 1 )"},{"path":"https://saezlab.github.io/decoupleR/reference/rename_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename network — rename_net","text":"network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. .mor Column edge mode regulation (.e. mor). .likelihood Deprecated argument. Now always set 1. def_mor Default value .mor provided.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/rename_net.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename network — rename_net","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\") mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\")) rename_net(net, source, target, mor) #> # A tibble: 10 × 4 #>    source target   mor likelihood #>    <chr>  <chr>  <dbl>      <dbl> #>  1 T1     G01      1            1 #>  2 T1     G02      1            1 #>  3 T1     G03      0.7          1 #>  4 T2     G06      1            1 #>  5 T2     G07      0.5          1 #>  6 T2     G08      1            1 #>  7 T3     G06     -0.5          1 #>  8 T3     G07     -3            1 #>  9 T3     G08     -1            1 #> 10 T3     G11      1            1"},{"path":"https://saezlab.github.io/decoupleR/reference/run_aucell.html","id":null,"dir":"Reference","previous_headings":"","what":"AUCell — run_aucell","title":"AUCell — run_aucell","text":"Calculates regulatory activities using AUCell.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_aucell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AUCell — run_aucell","text":"","code":"run_aucell(   mat,   network,   .source = source,   .target = target,   aucMaxRank = ceiling(0.05 * nrow(rankings)),   nproc = availableCores(),   seed = 42,   minsize = 5 )"},{"path":"https://saezlab.github.io/decoupleR/reference/run_aucell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AUCell — run_aucell","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. aucMaxRank Threshold calculate AUC. nproc Number cores use computation. seed single value, interpreted integer, NULL random number generation. minsize Integer indicating minimum number targets per source.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_aucell.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AUCell — run_aucell","text":"AUCell (Aibar et al., 2017) uses Area Curve (AUC) calculate whether set targets enriched within molecular readouts sample. , AUCell first ranks molecular features sample highest lowest value, resolving ties randomly. , AUC can calculated using default top 5% molecular features ranking. Therefore, metric, aucell, represents proportion abundant molecular features target set, relative abundance value compared features within sample. Aibar S. et al. (2017) Scenic: single-cell regulatory network inference clustering. Nat. Methods, 14, 1083–1086.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/run_aucell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AUCell — run_aucell","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\")  mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\"))  run_aucell(mat, net, minsize=0, nproc=1, aucMaxRank=3) #> # A tibble: 72 × 4 #>    statistic source condition score #>    <chr>     <chr>  <chr>     <dbl> #>  1 aucell    T1     S01       0.667 #>  2 aucell    T1     S02       0.667 #>  3 aucell    T1     S03       0.667 #>  4 aucell    T1     S04       1     #>  5 aucell    T1     S05       0.333 #>  6 aucell    T1     S06       0.333 #>  7 aucell    T1     S07       1     #>  8 aucell    T1     S08       1     #>  9 aucell    T1     S09       1     #> 10 aucell    T1     S10       1     #> # ℹ 62 more rows"},{"path":"https://saezlab.github.io/decoupleR/reference/run_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Consensus score between methods — run_consensus","title":"Consensus score between methods — run_consensus","text":"Function generate consensus score methods result decouple function.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consensus score between methods — run_consensus","text":"","code":"run_consensus(df, include_time = FALSE, seed = NULL)"},{"path":"https://saezlab.github.io/decoupleR/reference/run_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consensus score between methods — run_consensus","text":"df decouple data frame result include_time time per statistic evaluated informed? seed Deprecated parameter.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consensus score between methods — run_consensus","text":"Updated tibble computed consensus score methods","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Consensus score between methods — run_consensus","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\") mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\"))  results <- decouple(    mat = mat,    network = net,    .source = \"source\",    .target = \"target\",    statistics = c(\"wmean\", \"ulm\"),    args = list(             wmean = list(.mor = \"mor\", .likelihood = \"likelihood\"),             ulm = list(.mor = \"mor\", .likelihood = \"likelihood\")         ),    consensus_score = FALSE,    minsize = 0    ) run_consensus(results) #> # A tibble: 72 × 6 #>    condition run_id statistic source  score p_value #>    <chr>      <dbl> <chr>     <chr>   <dbl>   <dbl> #>  1 S01            3 consensus T1      1.21    0.227 #>  2 S01            3 consensus T2     -0.327   0.744 #>  3 S01            3 consensus T3     -0.217   0.828 #>  4 S02            3 consensus T1      1.21    0.226 #>  5 S02            3 consensus T2     -0.267   0.789 #>  6 S02            3 consensus T3     -0.289   0.773 #>  7 S03            3 consensus T1      1.20    0.229 #>  8 S03            3 consensus T2     -0.320   0.749 #>  9 S03            3 consensus T3     -0.196   0.845 #> 10 S04            3 consensus T1      1.21    0.228 #> # ℹ 62 more rows"},{"path":"https://saezlab.github.io/decoupleR/reference/run_fgsea.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast Gene Set Enrichment Analysis (FGSEA) — run_fgsea","title":"Fast Gene Set Enrichment Analysis (FGSEA) — run_fgsea","text":"Calculates regulatory activities using FGSEA.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_fgsea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast Gene Set Enrichment Analysis (FGSEA) — run_fgsea","text":"","code":"run_fgsea(   mat,   network,   .source = source,   .target = target,   times = 100,   nproc = availableCores(),   seed = 42,   minsize = 5,   ... )"},{"path":"https://saezlab.github.io/decoupleR/reference/run_fgsea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast Gene Set Enrichment Analysis (FGSEA) — run_fgsea","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. times many permutations ? nproc Number cores use computation. seed single value, interpreted integer, NULL. minsize Integer indicating minimum number targets per source. ... Arguments passed fgsea::fgseaMultilevel sampleSize size random set genes turn size = pathwaySize minSize Minimal size gene set test. pathways threshold excluded. maxSize Maximal size gene set test. pathways threshold excluded. eps parameter sets boundary calculating p value. scoreType parameter defines GSEA score type. Possible options (\"std\", \"pos\", \"neg\"). default (\"std\") enrichment score computed original GSEA. \"pos\" \"neg\" score types intended used one-tailed tests (.e. one interested positive (\"pos\") negateive (\"neg\") enrichment). gseaParam GSEA parameter value, gene-level statis raised power `gseaParam` calculation GSEA enrichment scores. BPPARAM Parallelization parameter used bplapply. Can used specify cluster run. initialized explicitly setting `nproc` default value `bpparam()` used. absEps deprecated, use `eps` parameter instead","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_fgsea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast Gene Set Enrichment Analysis (FGSEA) — run_fgsea","text":"long format tibble enrichment scores source across samples. Resulting tibble contains following columns: statistic: Indicates method associated score. source: Source nodes network. condition: Condition representing column mat. score: Regulatory activity (enrichment score).","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_fgsea.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast Gene Set Enrichment Analysis (FGSEA) — run_fgsea","text":"GSEA (Aravind et al., 2005) starts transforming input molecular readouts mat ranks sample. , enrichment score fgsea calculated walking list features, increasing running-sum statistic feature target feature set encountered decreasing . final score maximum deviation zero encountered random walk. Finally, normalized score norm_fgsea, can obtained computing z-score estimate compared null distribution obtained N random permutations. used implementation taken package fgsea (Korotkevich et al., 2021). Aravind S. et al. (2005) Gene set enrichment analysis: knowledge-based approach interpreting genome-wide expression profiles. PNAS. 102, 43. Korotkevich G. et al. (2021) Fast gene set enrichment analysis. bioRxiv. DOI: https://doi.org/10.1101/060012.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/run_fgsea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast Gene Set Enrichment Analysis (FGSEA) — run_fgsea","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\")  mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\"))  run_fgsea(mat, net, minsize=0, nproc=1) #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #>    |                                                                               |                                                                      |   0%   |                                                                               |===================================                                   |  50%   |                                                                               |======================================================================| 100% #>  #> # A tibble: 144 × 5 #>    statistic  source condition   score p_value #>    <chr>      <chr>  <chr>       <dbl>   <dbl> #>  1 fgsea      T1     S01         0.889  0.0755 #>  2 norm_fgsea T1     S01         1.24   0.0755 #>  3 fgsea      T2     S01        -0.667  0.548  #>  4 norm_fgsea T2     S01        -1.11   0.548  #>  5 fgsea      T3     S01        -0.75   0.01   #>  6 norm_fgsea T3     S01       Inf      0.01   #>  7 fgsea      T1     S02         0.889  0.0764 #>  8 norm_fgsea T1     S02         1.29   0.0764 #>  9 fgsea      T2     S02         0      0.977  #> 10 norm_fgsea T2     S02         0      0.977  #> # ℹ 134 more rows"},{"path":"https://saezlab.github.io/decoupleR/reference/run_gsva.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Set Variation Analysis (GSVA) — run_gsva","title":"Gene Set Variation Analysis (GSVA) — run_gsva","text":"Calculates regulatory activities using GSVA.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_gsva.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Set Variation Analysis (GSVA) — run_gsva","text":"","code":"run_gsva(   mat,   network,   .source = source,   .target = target,   verbose = FALSE,   method = c(\"gsva\", \"plage\", \"ssgsea\", \"zscore\"),   minsize = 5L,   maxsize = Inf,   ... )"},{"path":"https://saezlab.github.io/decoupleR/reference/run_gsva.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene Set Variation Analysis (GSVA) — run_gsva","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. verbose Gives information calculation step. Default: FALSE. method Method employ estimation gene-set enrichment. scores per sample. default set gsva (Hänzelmann et al, 2013). available methods \"plage\", \"ssgsea\" \"zscore\". Read manual GSVA::gsva. minsize Integer indicating minimum number targets per source. Must greater 0. maxsize Integer indicating maximum number targets per source. ... Arguments passed GSVA::gsvaParam, GSVA::ssgseaParam assay name assay use case exprData multi-assay container, otherwise ignored.  default, first assay used. annotation name Bioconductor annotation package gene identifiers occurring row names expression data matrix.  can used map gene identifiers occurring gene sets provided GeneSetCollection.  default gene identifiers used expression data matrix gene sets matched directly. kcdf Character vector length 1 denoting kernel use non-parametric estimation cumulative distribution function expression levels across samples.  default, kcdf=\"Gaussian\" suitable input expression values continuous, microarray fluorescent units logarithmic scale, RNA-seq log-CPMs, log-RPKMs log-TPMs.  input expression values integer counts, derived RNA-seq experiments, argument set kcdf=\"Poisson\". tau Numeric vector length 1.  exponent defining weight tail random walk performed GSVA (Hänzelmann et al., 2013) method.  default value 1 described paper. maxDiff Logical vector length 1 offers two approaches calculate enrichment statistic (ES) KS random walk statistic. FALSE: ES calculated maximum distance random walk 0. TRUE (default): ES calculated magnitude difference largest positive negative random walk deviations. absRanking Logical vector length 1 used maxDiff=TRUE. absRanking=FALSE (default) modified Kuiper statistic used calculate enrichment scores, taking magnitude difference largest positive negative random walk deviations. absRanking=TRUE original Kuiper statistic sums largest positive negative random walk deviations, used. latter case, gene sets genes enriched either extreme (high low) regarded ’highly’ activated. alpha Numeric vector length 1.  exponent defining weight tail random walk performed ssGSEA (Barbie et al., 2009) method.  default value 0.25 described paper. normalize Logical vector length 1; TRUE  runs ssGSEA method Barbie et al. (2009) normalizing scores absolute difference minimum maximum, described paper. Otherwise last normalization step skipped.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_gsva.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene Set Variation Analysis (GSVA) — run_gsva","text":"long format tibble enrichment scores source across samples. Resulting tibble contains following columns: statistic: Indicates method associated score. source: Source nodes network. condition: Condition representing column mat. score: Regulatory activity (enrichment score).","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_gsva.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gene Set Variation Analysis (GSVA) — run_gsva","text":"GSVA (Hänzelmann et al., 2013) starts transforming input molecular readouts mat readout-level statistic using Gaussian kernel estimation cumulative density function. , readout-level statistics ranked per sample normalized -weight two tails rank distribution. Afterwards, enrichment score gsva calculated using running sum statistic normalized subtracting largest negative estimate largest positive one. Hänzelmann S. et al. (2013) GSVA: gene set variation analysis microarray RNA-seq data. BMC Bioinformatics, 14, 7.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/run_gsva.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene Set Variation Analysis (GSVA) — run_gsva","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\")  mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\"))  run_gsva(mat, net, minsize=1, verbose = FALSE) #> # A tibble: 72 × 4 #>    statistic source condition score #>    <chr>     <chr>  <chr>     <dbl> #>  1 gsva      T1     S01       0.222 #>  2 gsva      T1     S02       0.556 #>  3 gsva      T1     S03       0.667 #>  4 gsva      T1     S04       0.778 #>  5 gsva      T1     S05       0.556 #>  6 gsva      T1     S06       0.667 #>  7 gsva      T1     S07       0.667 #>  8 gsva      T1     S08       0.667 #>  9 gsva      T1     S09       0.889 #> 10 gsva      T1     S10       0.444 #> # ℹ 62 more rows"},{"path":"https://saezlab.github.io/decoupleR/reference/run_mdt.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate Decision Trees (MDT) — run_mdt","title":"Multivariate Decision Trees (MDT) — run_mdt","text":"Calculates regulatory activities using MDT.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_mdt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate Decision Trees (MDT) — run_mdt","text":"","code":"run_mdt(   mat,   network,   .source = source,   .target = target,   .mor = mor,   .likelihood = likelihood,   sparse = FALSE,   center = FALSE,   na.rm = FALSE,   trees = 10,   min_n = 20,   nproc = availableCores(),   seed = 42,   minsize = 5 )"},{"path":"https://saezlab.github.io/decoupleR/reference/run_mdt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate Decision Trees (MDT) — run_mdt","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. .mor Column edge mode regulation (.e. mor). .likelihood Deprecated argument. Now always set 1. sparse Deprecated parameter. center Logical value indicating mat must centered base::rowMeans(). na.rm missing values (including NaN) omitted calculations base::rowMeans()? trees integer number trees contained ensemble. min_n integer minimum number data points node required node split . nproc Number cores use computation. seed single value, interpreted integer, NULL random number generation. minsize Integer indicating minimum number targets per source.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_mdt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate Decision Trees (MDT) — run_mdt","text":"long format tibble enrichment scores source across samples. Resulting tibble contains following columns: statistic: Indicates method associated score. source: Source nodes network. condition: Condition representing column mat. score: Regulatory activity (enrichment score).","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_mdt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multivariate Decision Trees (MDT) — run_mdt","text":"MDT fits multivariate regression random forest sample, observed molecular readouts mat response variable regulator weights net covariates. Target features associated weight set zero. obtained feature importances fitted model activities mdt regulators net.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/run_mdt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate Decision Trees (MDT) — run_mdt","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\")  mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\"))  run_mdt(mat, net, minsize=0) #> # A tibble: 72 × 4 #>    statistic source condition score #>    <chr>     <chr>  <chr>     <dbl> #>  1 mdt       T1     S01           0 #>  2 mdt       T1     S02           0 #>  3 mdt       T1     S03           0 #>  4 mdt       T1     S04           0 #>  5 mdt       T1     S05           0 #>  6 mdt       T1     S06           0 #>  7 mdt       T1     S07           0 #>  8 mdt       T1     S08           0 #>  9 mdt       T1     S09           0 #> 10 mdt       T1     S10           0 #> # ℹ 62 more rows"},{"path":"https://saezlab.github.io/decoupleR/reference/run_mlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate Linear Model (MLM) — run_mlm","title":"Multivariate Linear Model (MLM) — run_mlm","text":"Calculates regulatory activities using MLM.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_mlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate Linear Model (MLM) — run_mlm","text":"","code":"run_mlm(   mat,   network,   .source = source,   .target = target,   .mor = mor,   .likelihood = likelihood,   sparse = FALSE,   center = FALSE,   na.rm = FALSE,   minsize = 5 )"},{"path":"https://saezlab.github.io/decoupleR/reference/run_mlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate Linear Model (MLM) — run_mlm","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. .mor Column edge mode regulation (.e. mor). .likelihood Deprecated argument. Now always set 1. sparse Deprecated parameter. center Logical value indicating mat must centered base::rowMeans(). na.rm missing values (including NaN) omitted calculations base::rowMeans()? minsize Integer indicating minimum number targets per source.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_mlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate Linear Model (MLM) — run_mlm","text":"long format tibble enrichment scores source across samples. Resulting tibble contains following columns: statistic: Indicates method associated score. source: Source nodes network. condition: Condition representing column mat. score: Regulatory activity (enrichment score).","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_mlm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multivariate Linear Model (MLM) — run_mlm","text":"MLM fits multivariate linear model sample, observed molecular readouts mat response variable regulator weights net covariates. Target features associated weight set zero. obtained t-values fitted model activities (mlm) regulators net.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/run_mlm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate Linear Model (MLM) — run_mlm","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\")  mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\"))  run_mlm(mat, net, minsize=0) #> # A tibble: 72 × 5 #>    statistic source condition   score p_value #>    <chr>     <chr>  <chr>       <dbl>   <dbl> #>  1 mlm       T1     S01        3.52   0.00781 #>  2 mlm       T2     S01       -1.13   0.290   #>  3 mlm       T3     S01       -0.247  0.811   #>  4 mlm       T1     S02        3.48   0.00831 #>  5 mlm       T2     S02       -0.213  0.837   #>  6 mlm       T3     S02       -0.353  0.733   #>  7 mlm       T1     S03        3.15   0.0135  #>  8 mlm       T2     S03       -0.638  0.541   #>  9 mlm       T3     S03        0.0749 0.942   #> 10 mlm       T1     S04        3.82   0.00512 #> # ℹ 62 more rows"},{"path":"https://saezlab.github.io/decoupleR/reference/run_ora.html","id":null,"dir":"Reference","previous_headings":"","what":"Over Representation Analysis (ORA) — run_ora","title":"Over Representation Analysis (ORA) — run_ora","text":"Calculates regulatory activities using ORA.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_ora.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Over Representation Analysis (ORA) — run_ora","text":"","code":"run_ora(   mat,   network,   .source = source,   .target = target,   n_up = ceiling(0.05 * nrow(mat)),   n_bottom = 0,   n_background = 20000,   with_ties = TRUE,   seed = 42,   minsize = 5,   ... )"},{"path":"https://saezlab.github.io/decoupleR/reference/run_ora.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Over Representation Analysis (ORA) — run_ora","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. n_up Integer indicating number top targets slice mat. n_bottom Integer indicating number bottom targets slice mat. n_background Integer indicating background size sliced targets. specified number background targets determined total number unique targets union mat network. with_ties ties kept together? default, TRUE, may return rows request. Use FALSE ignore ties, return first n rows. seed single value, interpreted integer, NULL random number generation. minsize Integer indicating minimum number targets per source. ... Arguments passed stats::fisher.test workspace integer specifying size workspace     used network algorithm.  units 4 bytes.  used     non-simulated p-values larger \\(2 \\times 2\\) tables.     Since R version 3.5.0, also increases internal stack size     allows larger problems solved, however sometimes needing     hours.  cases, simulate.p.values=TRUE may     reasonable. hybrid logical. used larger \\(2 \\times 2\\)     tables, cases indicates whether exact probabilities     (default) hybrid approximation thereof computed. hybridPars numeric vector length 3, default describing     “Cochran's conditions” validity chisquare     approximation, see ‘Details’. control list named components low level algorithm     control.  present one used \"mult\", positive     integer \\(\\ge 2\\) default 30 used larger     \\(2 \\times 2\\) tables.  says many times much     space allocated paths keys: see file     fexact.c sources package. hypothesized odds ratio.  used     \\(2 \\times 2\\) case. alternative indicates alternative hypothesis must     one \"two.sided\", \"greater\" \"less\".     can specify just initial letter.  used     \\(2 \\times 2\\) case. conf.int logical indicating confidence interval     odds ratio \\(2 \\times 2\\) table     computed (returned). conf.level confidence level returned confidence     interval.  used \\(2 \\times 2\\) case     conf.int = TRUE. simulate.p.value logical indicating whether compute     p-values Monte Carlo simulation, larger \\(2 \\times       2\\) tables. B integer specifying number replicates used     Monte Carlo test.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_ora.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Over Representation Analysis (ORA) — run_ora","text":"long format tibble enrichment scores source across samples. Resulting tibble contains following columns: statistic: Indicates method associated score. source: Source nodes network. condition: Condition representing column mat. score: Regulatory activity (enrichment score).","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_ora.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Over Representation Analysis (ORA) — run_ora","text":"ORA measures overlap target feature set list altered molecular features mat. altered molecular features can selected top bottom molecular readout distribution, default top 5% positive values. , contingency table build one-tailed Fisher’s exact test computed determine regulator’s set features -represented selected features data. resulting score, ora, minus log10 obtained p-value.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/run_ora.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Over Representation Analysis (ORA) — run_ora","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\")  mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\"))  run_ora(mat, net, minsize=0) #> # A tibble: 72 × 5 #>    statistic source condition score  p_value #>    <chr>     <chr>  <chr>     <dbl>    <dbl> #>  1 ora       T1     S01        3.82 0.000150 #>  2 ora       T1     S02        3.82 0.000150 #>  3 ora       T1     S03        3.82 0.000150 #>  4 ora       T1     S04        3.82 0.000150 #>  5 ora       T1     S05        0    1        #>  6 ora       T1     S06        0    1        #>  7 ora       T1     S07        3.82 0.000150 #>  8 ora       T1     S08        3.82 0.000150 #>  9 ora       T1     S09        3.82 0.000150 #> 10 ora       T1     S10        3.82 0.000150 #> # ℹ 62 more rows"},{"path":"https://saezlab.github.io/decoupleR/reference/run_udt.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate Decision Tree (UDT) — run_udt","title":"Univariate Decision Tree (UDT) — run_udt","text":"Calculates regulatory activities using UDT.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_udt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Univariate Decision Tree (UDT) — run_udt","text":"","code":"run_udt(   mat,   network,   .source = source,   .target = target,   .mor = mor,   .likelihood = likelihood,   sparse = FALSE,   center = FALSE,   na.rm = FALSE,   min_n = 20,   seed = 42,   minsize = 5 )"},{"path":"https://saezlab.github.io/decoupleR/reference/run_udt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Univariate Decision Tree (UDT) — run_udt","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. .mor Column edge mode regulation (.e. mor). .likelihood Deprecated argument. Now always set 1. sparse Deprecated parameter. center Logical value indicating mat must centered base::rowMeans(). na.rm missing values (including NaN) omitted calculations base::rowMeans()? min_n integer minimum number data points node required node split . seed single value, interpreted integer, NULL random number generation. minsize Integer indicating minimum number targets per source.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_udt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Univariate Decision Tree (UDT) — run_udt","text":"long format tibble enrichment scores source across samples. Resulting tibble contains following columns: statistic: Indicates method associated score. source: Source nodes network. condition: Condition representing column mat. score: Regulatory activity (enrichment score).","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_udt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Univariate Decision Tree (UDT) — run_udt","text":"UDT fits single regression decision tree sample regulator, observed molecular readouts mat response variable regulator weights net explanatory one. Target features associated weight set zero. obtained feature importance fitted model activity udt given regulator.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/run_udt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Univariate Decision Tree (UDT) — run_udt","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\")  mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\"))  run_udt(mat, net, minsize=0) #> # A tibble: 72 × 4 #>    statistic source condition score #>    <chr>     <chr>  <chr>     <dbl> #>  1 udt       T1     S01           0 #>  2 udt       T1     S02           0 #>  3 udt       T1     S03           0 #>  4 udt       T1     S04           0 #>  5 udt       T1     S05           0 #>  6 udt       T1     S06           0 #>  7 udt       T1     S07           0 #>  8 udt       T1     S08           0 #>  9 udt       T1     S09           0 #> 10 udt       T1     S10           0 #> # ℹ 62 more rows"},{"path":"https://saezlab.github.io/decoupleR/reference/run_ulm.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate Linear Model (ULM) — run_ulm","title":"Univariate Linear Model (ULM) — run_ulm","text":"Calculates regulatory activities using ULM.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_ulm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Univariate Linear Model (ULM) — run_ulm","text":"","code":"run_ulm(   mat,   network,   .source = source,   .target = target,   .mor = mor,   .likelihood = likelihood,   sparse = FALSE,   center = FALSE,   na.rm = FALSE,   minsize = 5L )"},{"path":"https://saezlab.github.io/decoupleR/reference/run_ulm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Univariate Linear Model (ULM) — run_ulm","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. .mor Column edge mode regulation (.e. mor). .likelihood Deprecated argument. Now always set 1. sparse Deprecated parameter. center Logical value indicating mat must centered base::rowMeans(). na.rm missing values (including NaN) omitted calculations base::rowMeans()? minsize Integer indicating minimum number targets per source.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_ulm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Univariate Linear Model (ULM) — run_ulm","text":"long format tibble enrichment scores source across samples. Resulting tibble contains following columns: statistic: Indicates method associated score. source: Source nodes network. condition: Condition representing column mat. score: Regulatory activity (enrichment score).","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_ulm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Univariate Linear Model (ULM) — run_ulm","text":"ULM fits linear model sample regulator, observed molecular readouts mat response variable regulator weights net explanatory one. Target features associated weight set zero. obtained t-value fitted model activity ulm given regulator.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/run_ulm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Univariate Linear Model (ULM) — run_ulm","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\")  mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\"))  run_ulm(mat, net, minsize=0) #> # A tibble: 72 × 5 #>    statistic source condition score  p_value #>    <chr>     <chr>  <chr>     <dbl>    <dbl> #>  1 ulm       T1     S01        4.21 0.00180  #>  2 ulm       T1     S02        4.07 0.00224  #>  3 ulm       T1     S03        3.85 0.00319  #>  4 ulm       T1     S04        4.60 0.000979 #>  5 ulm       T1     S05        3.90 0.00298  #>  6 ulm       T1     S06        3.66 0.00442  #>  7 ulm       T1     S07        4.31 0.00153  #>  8 ulm       T1     S08        4.65 0.000902 #>  9 ulm       T1     S09        4.49 0.00117  #> 10 ulm       T1     S10        4.07 0.00225  #> # ℹ 62 more rows"},{"path":"https://saezlab.github.io/decoupleR/reference/run_viper.html","id":null,"dir":"Reference","previous_headings":"","what":"Virtual Inference of Protein-activity by Enriched Regulon analysis (VIPER) — run_viper","title":"Virtual Inference of Protein-activity by Enriched Regulon analysis (VIPER) — run_viper","text":"Calculates regulatory activities using VIPER.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_viper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Virtual Inference of Protein-activity by Enriched Regulon analysis (VIPER) — run_viper","text":"","code":"run_viper(   mat,   network,   .source = source,   .target = target,   .mor = mor,   .likelihood = likelihood,   verbose = FALSE,   minsize = 5,   pleiotropy = TRUE,   eset.filter = FALSE,   ... )"},{"path":"https://saezlab.github.io/decoupleR/reference/run_viper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Virtual Inference of Protein-activity by Enriched Regulon analysis (VIPER) — run_viper","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. .mor Column edge mode regulation (.e. mor). .likelihood Deprecated argument. Now always set 1. verbose Logical, whether progression messages printed terminal. minsize Integer indicating minimum number targets per source. pleiotropy Logical, whether correction pleiotropic regulation performed. eset.filter Logical, whether dataset limited genes represented interactome. ... Arguments passed viper::viper dnull Numeric matrix null model, usually generated nullTtest nes Logical, whether enrichment score reported normalized method Character string indicating method computing single samples signature, either scale, rank, mad, ttest none bootstraps Integer indicating number bootstraps iterations perform. scale method implemented bootstraps. adaptive.size Logical, whether weighting scores taken account computing regulon size pleiotropyArgs list 5 numbers pleotropy correction indicating: regulators p-value threshold, pleiotropic interaction p-value threshold, minimum number targets overlap pleiotropic regulators, penalty pleiotropic interactions method computing pleiotropy, either absolute adaptive cores Integer indicating number cores use (1 Windows-based systems)","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_viper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Virtual Inference of Protein-activity by Enriched Regulon analysis (VIPER) — run_viper","text":"long format tibble enrichment scores source across samples. Resulting tibble contains following columns: statistic: Indicates method associated score. source: Source nodes network. condition: Condition representing column mat. score: Regulatory activity (enrichment score).","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_viper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Virtual Inference of Protein-activity by Enriched Regulon analysis (VIPER) — run_viper","text":"VIPER (Alvarez et al., 2016) estimates biological activities performing three-tailed enrichment score calculation. information check supplementary information decoupler manuscript original publication. Alvarez M.J.et al. (2016) Functional characterization somatic mutations cancer using network-based inference protein activity. Nat. Genet., 48, 838–847.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/run_viper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Virtual Inference of Protein-activity by Enriched Regulon analysis (VIPER) — run_viper","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\")  mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\"))  run_viper(mat, net, minsize=0, verbose = FALSE) #> # A tibble: 72 × 5 #>    statistic source condition score p_value #>    <chr>     <chr>  <chr>     <dbl>   <dbl> #>  1 viper     T1     S01        1.45  0.147  #>  2 viper     T1     S02        1.45  0.147  #>  3 viper     T1     S03        1.45  0.147  #>  4 viper     T1     S04        1.84  0.0662 #>  5 viper     T1     S05        1.22  0.224  #>  6 viper     T1     S06        1.25  0.209  #>  7 viper     T1     S07        1.62  0.106  #>  8 viper     T1     S08        1.76  0.0783 #>  9 viper     T1     S09        1.62  0.106  #> 10 viper     T1     S10        1.62  0.106  #> # ℹ 62 more rows"},{"path":"https://saezlab.github.io/decoupleR/reference/run_wmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Mean (WMEAN) — run_wmean","title":"Weighted Mean (WMEAN) — run_wmean","text":"Calculates regulatory activities using WMEAN.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_wmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Mean (WMEAN) — run_wmean","text":"","code":"run_wmean(   mat,   network,   .source = source,   .target = target,   .mor = mor,   .likelihood = likelihood,   times = 100,   seed = 42,   sparse = TRUE,   randomize_type = \"rows\",   minsize = 5 )"},{"path":"https://saezlab.github.io/decoupleR/reference/run_wmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Mean (WMEAN) — run_wmean","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. .mor Column edge mode regulation (.e. mor). .likelihood Deprecated argument. Now always set 1. times many permutations ? seed single value, interpreted integer, NULL random number generation. sparse matrices used calculation sparse? randomize_type randomize expression matrix. minsize Integer indicating minimum number targets per source.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_wmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Mean (WMEAN) — run_wmean","text":"long format tibble enrichment scores source across samples. Resulting tibble contains following columns: statistic: Indicates method associated score. source: Source nodes network. condition: Condition representing column mat. score: Regulatory activity (enrichment score). p_value: p-value score method.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_wmean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Mean (WMEAN) — run_wmean","text":"WMEAN infers regulator activities first multiplying target feature associated weight summed enrichment score wmean. Furthermore, permutations random target features can performed obtain null distribution can used compute z-score norm_wmean, corrected estimate corr_wmean multiplying wmean minus log10 obtained empirical p-value.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/run_wmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Mean (WMEAN) — run_wmean","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\")  mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\"))  run_wmean(mat, net, minsize=0) #> # A tibble: 216 × 5 #>    statistic  source condition score p_value #>    <chr>      <chr>  <chr>     <dbl>   <dbl> #>  1 corr_wmean T1     S01        15.0    0.02 #>  2 corr_wmean T1     S02        14.7    0.02 #>  3 corr_wmean T1     S03        15.2    0.02 #>  4 corr_wmean T1     S04        15.7    0.02 #>  5 corr_wmean T1     S05        14.4    0.02 #>  6 corr_wmean T1     S06        14.2    0.02 #>  7 corr_wmean T1     S07        14.8    0.02 #>  8 corr_wmean T1     S08        14.8    0.02 #>  9 corr_wmean T1     S09        15.3    0.02 #> 10 corr_wmean T1     S10        13.8    0.02 #> # ℹ 206 more rows"},{"path":"https://saezlab.github.io/decoupleR/reference/run_wsum.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Sum (WSUM) — run_wsum","title":"Weighted Sum (WSUM) — run_wsum","text":"Calculates regulatory activities using WSUM.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_wsum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Sum (WSUM) — run_wsum","text":"","code":"run_wsum(   mat,   network,   .source = source,   .target = target,   .mor = mor,   .likelihood = likelihood,   times = 100,   seed = 42,   sparse = TRUE,   randomize_type = \"rows\",   minsize = 5 )"},{"path":"https://saezlab.github.io/decoupleR/reference/run_wsum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Sum (WSUM) — run_wsum","text":"mat Matrix evaluate (e.g. expression matrix). Target nodes rows conditions columns. rownames(mat) must least one intersection elements network .target column. network Tibble dataframe edges associated metadata. .source Column source nodes. .target Column target nodes. .mor Column edge mode regulation (.e. mor). .likelihood Deprecated argument. Now always set 1. times many permutations ? seed single value, interpreted integer, NULL random number generation. sparse matrices used calculation sparse? randomize_type randomize expression matrix. minsize Integer indicating minimum number targets per source.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_wsum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Sum (WSUM) — run_wsum","text":"long format tibble enrichment scores source across samples. Resulting tibble contains following columns: statistic: Indicates method associated score. source: Source nodes network. condition: Condition representing column mat. score: Regulatory activity (enrichment score). p_value: p-value score method.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/run_wsum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Sum (WSUM) — run_wsum","text":"WSUM infers regulator activities first multiplying target feature associated weight summed enrichment score wsum. Furthermore, permutations random target features can performed obtain null distribution can used compute z-score norm_wsum, corrected estimate corr_wsum multiplying wsum minus log10 obtained empirical p-value.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/reference/run_wsum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Sum (WSUM) — run_wsum","text":"","code":"inputs_dir <- system.file(\"testdata\", \"inputs\", package = \"decoupleR\")  mat <- readRDS(file.path(inputs_dir, \"mat.rds\")) net <- readRDS(file.path(inputs_dir, \"net.rds\"))  run_wsum(mat, net, minsize=0) #> # A tibble: 216 × 5 #>    statistic source condition score p_value #>    <chr>     <chr>  <chr>     <dbl>   <dbl> #>  1 corr_wsum T1     S01        40.4    0.02 #>  2 corr_wsum T1     S02        39.7    0.02 #>  3 corr_wsum T1     S03        41.0    0.02 #>  4 corr_wsum T1     S04        42.3    0.02 #>  5 corr_wsum T1     S05        38.9    0.02 #>  6 corr_wsum T1     S06        38.3    0.02 #>  7 corr_wsum T1     S07        40.0    0.02 #>  8 corr_wsum T1     S08        40.0    0.02 #>  9 corr_wsum T1     S09        41.2    0.02 #> 10 corr_wsum T1     S10        37.2    0.02 #> # ℹ 206 more rows"},{"path":"https://saezlab.github.io/decoupleR/reference/show_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Show methods — show_methods","title":"Show methods — show_methods","text":"Prints methods available decoupleR. first column correspond function name decoupleR second method's full name.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/show_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show methods — show_methods","text":"","code":"show_methods()"},{"path":"https://saezlab.github.io/decoupleR/reference/show_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show methods — show_methods","text":"","code":"show_methods() #> # A tibble: 12 × 2 #>    Function      Name                                                            #>    <chr>         <chr>                                                           #>  1 run_aucell    AUCell                                                          #>  2 run_consensus Consensus score between methods                                 #>  3 run_fgsea     Fast Gene Set Enrichment Analysis (FGSEA)                       #>  4 run_gsva      Gene Set Variation Analysis (GSVA)                              #>  5 run_mdt       Multivariate Decision Trees (MDT)                               #>  6 run_mlm       Multivariate Linear Model (MLM)                                 #>  7 run_ora       Over Representation Analysis (ORA)                              #>  8 run_udt       Univariate Decision Tree (UDT)                                  #>  9 run_ulm       Univariate Linear Model (ULM)                                   #> 10 run_viper     Virtual Inference of Protein-activity by Enriched Regulon anal… #> 11 run_wmean     Weighted Mean (WMEAN)                                           #> 12 run_wsum      Weighted Sum (WSUM)"},{"path":"https://saezlab.github.io/decoupleR/reference/show_resources.html","id":null,"dir":"Reference","previous_headings":"","what":"Shows available resources in Omnipath. For more information visit the\nofficial website for Omnipath. — show_resources","title":"Shows available resources in Omnipath. For more information visit the\nofficial website for Omnipath. — show_resources","text":"Shows available resources Omnipath. information visit official website Omnipath.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/show_resources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shows available resources in Omnipath. For more information visit the\nofficial website for Omnipath. — show_resources","text":"","code":"show_resources()"},{"path":"https://saezlab.github.io/decoupleR/reference/show_resources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shows available resources in Omnipath. For more information visit the\nofficial website for Omnipath. — show_resources","text":"","code":"decoupleR::show_resources() #>  [1] \"Adhesome\"             \"Almen2009\"            \"Baccin2019\"           #>  [4] \"CORUM_Funcat\"         \"CORUM_GO\"             \"CSPA\"                 #>  [7] \"CSPA_celltype\"        \"CancerDrugsDB\"        \"CancerGeneCensus\"     #> [10] \"CancerSEA\"            \"CellCall\"             \"CellCellInteractions\" #> [13] \"CellChatDB\"           \"CellChatDB_complex\"   \"CellPhoneDB\"          #> [16] \"CellPhoneDB_complex\"  \"CellTalkDB\"           \"CellTypist\"           #> [19] \"Cellinker\"            \"Cellinker_complex\"    \"ComPPI\"               #> [22] \"CytoSig\"              \"DGIdb\"                \"DisGeNet\"             #> [25] \"EMBRACE\"              \"Exocarta\"             \"GO_Intercell\"         #> [28] \"GPCRdb\"               \"Guide2Pharma\"         \"HGNC\"                 #> [31] \"HPA_secretome\"        \"HPA_subcellular\"      \"HPA_tissue\"           #> [34] \"HPMR\"                 \"HumanCellMap\"         \"ICELLNET\"             #> [37] \"ICELLNET_complex\"     \"IntOGen\"              \"Integrins\"            #> [40] \"InterPro\"             \"KEGG-PC\"              \"Kirouac2010\"          #> [43] \"LOCATE\"               \"LRdb\"                 \"Lambert2018\"          #> [46] \"MCAM\"                 \"MSigDB\"               \"Matrisome\"            #> [49] \"MatrixDB\"             \"Membranome\"           \"NetPath\"              #> [52] \"OPM\"                  \"PROGENy\"              \"PanglaoDB\"            #> [55] \"Phobius\"              \"Phosphatome\"          \"Ramilowski2015\"       #> [58] \"Ramilowski_location\"  \"SIGNOR\"               \"SignaLink_function\"   #> [61] \"SignaLink_pathway\"    \"Surfaceome\"           \"TCDB\"                 #> [64] \"TFcensus\"             \"TopDB\"                \"UniProt_family\"       #> [67] \"UniProt_keyword\"      \"UniProt_location\"     \"UniProt_tissue\"       #> [70] \"UniProt_topology\"     \"Vesiclepedia\"         \"Wang\"                 #> [73] \"Zhong2015\"            \"connectomeDB2020\"     \"iTALK\"                #> [76] \"kinase.com\"           \"scConnect\"            \"scConnect_complex\"    #> [79] \"talklr\""},{"path":"https://saezlab.github.io/decoupleR/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"rlang::sym() creates symbol string syms() creates list symbols character vector. enquo() enquos() delay execution one several function arguments. enquo() returns single quoted expression, like blueprint delayed computation. enquos() returns list quoted expressions. expr() quotes new expression locally. mostly useful build new expressions around arguments captured enquo() enquos(): expr(mean(!!enquo(arg), na.rm = TRUE)). rlang::as_name() transforms quoted variable name string. Supplying something else quoted variable name error. unlike rlang::as_label() also returns single string supports kind R object input, including quoted function calls vectors. purpose summarise object single label. label often suitable default name. know quoted expression contains (instance expressions captured enquo() variable name, call function, unquoted constant), use as_label(). know quoted simple variable name, like enforce , use as_name(). learn tidy eval use tools, visit https://tidyeval.tidyverse.org Metaprogramming section Advanced R.","code":""},{"path":"https://saezlab.github.io/decoupleR/reference/tidyeval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy eval helpers — tidyeval","text":"","code":"if (FALSE) {     help(\"nse-defuse\", package = \"rlang\") }"},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/news/index.html","id":"changes-2-3","dir":"Changelog","previous_headings":"","what":"Changes","title":"decoupleR 2.3.x","text":"ulm mlm now faster consume memory. mat now transformed matrix automatically.","code":""},{"path":"https://saezlab.github.io/decoupleR/news/index.html","id":"new-features-2-3","dir":"Changelog","previous_headings":"","what":"New features","title":"decoupleR 2.3.x","text":"Added get_collectri wrapper easily access CollecTRI Gene Regulatory Network Network Omnipath. Added get_ksn_omnipath wrapper easily access Kinase-Substrate network Omnipath.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/news/index.html","id":"changes-2-2","dir":"Changelog","previous_headings":"","what":"Changes","title":"decoupleR 2.2.x","text":"Changed example mat net toy examples. Changed test data toy data.","code":""},{"path":"https://saezlab.github.io/decoupleR/news/index.html","id":"bugfixes-2-2","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"decoupleR 2.2.x","text":"ora now selects correctly top bottom genes p-value estimation. wmean wsum now handle named matrices one sample.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/news/index.html","id":"changes-2-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"decoupleR 2.1.x","text":"likelihood param deprecated, now , weights (positive negative) go mor column network. Methods still run likelihood specified, however set 1. Added minsize argument methods, set 5 default. Sources containing less value targets input mat removed calculations. Changed default behavior decouple function. Now methods specified statistics argument, function run top performers benchmark (mlm, ulm wsum). run methods like , set statistics ‘’. Moreover, argument consensus_stats added filter statistics calculation consensus score. default uses mlm, ulm norm_wsum, statistics==‘’ methods returned running decouple. viper method: Now properly handles weights mor normalizing -1 +1. ulm/mlm/udt/mdt methods: Changed processed input network. model matrix contained intersection features mat network’s targets, now incorporates features coming mat ensuring robust prediction. Prediction values may change slightly older versions. Deprecated sparse argument. ora method: Now takes top 5% features default input instead 300 bottom features. Added seed randomly break ties consensus method: longer based RobustRankAggreg. Now consensus score mean activities obtained double tailed z-score transformation. Discarded filter_regulons function. Moved major dependencies Suggest reduce number dependencies needed. Updated README adding: Kinase inference example Graphical abstract Manuscript citation New vignette style Updated documentation methods.","code":""},{"path":"https://saezlab.github.io/decoupleR/news/index.html","id":"new-features-2-1","dir":"Changelog","previous_headings":"","what":"New features","title":"decoupleR 2.1.x","text":"Added wrappers easily query Omnipath, one largest data-bases collecting prior-knowledge resources. Added functions: show_resources: shows available resources inside Omnipath. get_resource: gets resource Omnipath. get_dorothea: gets DoRothEA gene regulatory network transcription factor (TF) activity estimation. Note: version slightly different one package dorothea since contains new edges TFs also weights interactions confidence levels. get_progeny: gets PROGENy model pathway activity estimation. Added show_methods function, shows many statistics currently available. Added check_corr function, shows correlated regulators network . can used check co-linearity mlm mdt. Added new error mlm co-variables co-linear (regulators correlated fit model).","code":""},{"path":"https://saezlab.github.io/decoupleR/news/index.html","id":"bugfixes-2-1","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"decoupleR 2.1.x","text":"wmean wsum now return correct empirical p-values. ulm, mlm, mdt udt now accept matrices one column input. Results ulm mlm now correctly return un-grouped. Methods correctly run mat column names.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/news/index.html","id":"changes-2-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"decoupleR 2.0.x","text":"method’s names changed make easier identify: pscira now called Weighted Sum (wsum). mean now called Weighted Mean (wmean). scira now called Univariate Linear Model (ulm). column name tf output tibbles changed source. Updated documentation methods. Updated vignette README. decouple function now accepts order mismatch list methods list methods’s arguments. Moved benchmark branch separate repository package: https://github.com/saezlab/decoupleRBench","code":""},{"path":"https://saezlab.github.io/decoupleR/news/index.html","id":"new-features-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"decoupleR 2.0.x","text":"New methods added: Fast Gene Set Enrichment Analysis (fgsea). AUCell. Univariate Decision Tree (udt). Multivariate Decision Tree (mdt). Multivariate Linear Model (mlm). New decoupleR manuscript repository: https://github.com/saezlab/decoupleR_manuscript New consensus score based RobustRankAggreg::aggregateRanks() added running decouple multiple methods. New statistic corr_wmean inside wmean. Methods based permutations statistical tests now return also p-value obtained score (fgsea, mlm, ora, ulm, viper, wmean wsum). New error added network edges duplicated. New error added input matrix contains NAs Infs.","code":""},{"path":[]},{"path":"https://saezlab.github.io/decoupleR/news/index.html","id":"new-features-1-1","dir":"Changelog","previous_headings":"","what":"New features","title":"decoupleR 1.1.x","text":"new features allow tidy selection. Making easier evaluate different types data method. instance, can specify columns use strings, integer position, symbol expression.","code":""},{"path":"https://saezlab.github.io/decoupleR/news/index.html","id":"methods-1-1","dir":"Changelog","previous_headings":"New features","what":"Methods","title":"decoupleR 1.1.x","text":"New decouple() integrates various member functions decoupleR statistics centralized evaluation. New family decoupleR statists shared documentation made : New run_gsva() incorporate convinient wrapper GSVA::gsva(). New run_mean() calculates unnormalized regulatory activity normalized (.e. z-score) one based empirical distribution. New run_ora() fisher exact test calculate regulatory activity. New run_pscira() uses logic equivalent run_mean() difference accept column likelihood. New run_scira() calculates regulatory activity coefficient β1 adjusted linear model. New run_viper() incorporate convinient wrapper viper::viper().","code":""},{"path":"https://saezlab.github.io/decoupleR/news/index.html","id":"converters-1-1","dir":"Changelog","previous_headings":"New features","what":"Converters","title":"decoupleR 1.1.x","text":"New convert_to_() return entry without modification. New convert_to_gsva() return list regulons suitable GSVA::gsva(). New convert_to_mean() return tibble four columns: tf, target, mor likelihood. New convert_to_ora() returns named list regulons; tf associated targets. New convert_to_pscira() returns tibble three columns: tf, target mor. New convert_to_scira() returns tibble three columns: tf, target mor. New convert_to_viper() return list regulons suitable viper::viper()","code":""}]
